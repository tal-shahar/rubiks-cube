{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport RubiksCube from './components/RubiksCube';\nimport Controls from './components/Controls';\nimport InfoPanel from './components/InfoPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = AppContainer;\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n`;\n_c4 = Subtitle;\nconst MainContent = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  max-width: 1200px;\n`;\n_c5 = MainContent;\nconst CubeContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n`;\n_c6 = CubeContainer;\nfunction App() {\n  _s();\n  const [isRotating, setIsRotating] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(true);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [currentScramble, setCurrentScramble] = useState('');\n  const scrambleRef = useRef();\n  const resetRef = useRef();\n  const handleScramble = () => {\n    if (scrambleRef.current) {\n      setIsScrambling(true);\n      setCurrentScramble('Generating scramble sequence...');\n      scrambleRef.current();\n\n      // Update scramble display after a delay\n      setTimeout(() => {\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\n        setTimeout(() => {\n          setIsScrambling(false);\n        }, 7000);\n      }, 1000);\n    }\n  };\n  const handleReset = () => {\n    if (resetRef.current) {\n      setCurrentScramble('');\n      resetRef.current();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Rubik's Cube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Interactive 3D Cube with Three.js & React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(CubeContainer, {\n        children: /*#__PURE__*/_jsxDEV(RubiksCube, {\n          isRotating: isRotating,\n          autoRotate: autoRotate,\n          onScramble: scrambleFn => {\n            scrambleRef.current = scrambleFn;\n          },\n          onReset: resetFn => {\n            resetRef.current = resetFn;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        isRotating: isRotating,\n        setIsRotating: setIsRotating,\n        autoRotate: autoRotate,\n        setAutoRotate: setAutoRotate,\n        onScramble: handleScramble,\n        onReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {\n        currentScramble: currentScramble,\n        isScrambling: isScrambling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pZfZP4Aw2MP15qDEzc/XQqvWvrY=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"MainContent\");\n$RefreshReg$(_c6, \"CubeContainer\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useRef","styled","RubiksCube","Controls","InfoPanel","jsxDEV","_jsxDEV","AppContainer","div","_c","Header","header","_c2","Title","h1","_c3","Subtitle","p","_c4","MainContent","main","_c5","CubeContainer","_c6","App","_s","isRotating","setIsRotating","autoRotate","setAutoRotate","isScrambling","setIsScrambling","currentScramble","setCurrentScramble","scrambleRef","resetRef","handleScramble","current","setTimeout","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onScramble","scrambleFn","onReset","resetFn","_c7","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport RubiksCube from './components/RubiksCube';\r\nimport Controls from './components/Controls';\r\nimport InfoPanel from './components/InfoPanel';\r\n\r\nconst AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: white;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  font-size: 1.2rem;\r\n  opacity: 0.9;\r\n`;\r\n\r\nconst MainContent = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 30px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n`;\r\n\r\nconst CubeContainer = styled.div`\r\n  width: 100%;\r\n  height: 600px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  overflow: hidden;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nfunction App() {\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(true);\r\n  const [isScrambling, setIsScrambling] = useState(false);\r\n  const [currentScramble, setCurrentScramble] = useState('');\r\n  const scrambleRef = useRef();\r\n  const resetRef = useRef();\r\n\r\n  const handleScramble = () => {\r\n    if (scrambleRef.current) {\r\n      setIsScrambling(true);\r\n      setCurrentScramble('Generating scramble sequence...');\r\n      scrambleRef.current();\r\n      \r\n      // Update scramble display after a delay\r\n      setTimeout(() => {\r\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\r\n        setTimeout(() => {\r\n          setIsScrambling(false);\r\n        }, 7000);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (resetRef.current) {\r\n      setCurrentScramble('');\r\n      resetRef.current();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Header>\r\n        <Title>Rubik's Cube</Title>\r\n        <Subtitle>Interactive 3D Cube with Three.js & React</Subtitle>\r\n      </Header>\r\n      \r\n      <MainContent>\r\n        <CubeContainer>\r\n          <RubiksCube \r\n            isRotating={isRotating}\r\n            autoRotate={autoRotate}\r\n            onScramble={(scrambleFn) => { scrambleRef.current = scrambleFn; }}\r\n            onReset={(resetFn) => { resetRef.current = resetFn; }}\r\n          />\r\n        </CubeContainer>\r\n        \r\n        <Controls \r\n          isRotating={isRotating}\r\n          setIsRotating={setIsRotating}\r\n          autoRotate={autoRotate}\r\n          setAutoRotate={setAutoRotate}\r\n          onScramble={handleScramble}\r\n          onReset={handleReset}\r\n        />\r\n        \r\n        <InfoPanel \r\n          currentScramble={currentScramble}\r\n          isScrambling={isScrambling}\r\n        />\r\n      </MainContent>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}