{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\components\\\\RubiksCube.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useMemo, useCallback, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Environment } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// Custom logging function that will be visible in terminal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logToTerminal = (message, data = null) => {\n  // Log to browser console\n  console.log(`\\n🎯 ${message}`);\n  if (data) {\n    console.log(JSON.stringify(data, null, 2));\n  }\n  console.log('='.repeat(80) + '\\n');\n\n  // Send to log server to print in terminal\n  fetch('http://localhost:3001/log', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message: message,\n      data: data\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    console.log('✅ Log sent to terminal successfully');\n  }).catch(error => {\n    console.error('❌ Could not send log to terminal server:', error);\n    console.log('💡 Make sure the log server is running with: npm run log-server');\n  });\n};\n\n// Function to create unique shapes for each piece with different border colors per face\nfunction createShapeWithFaceBorder(pieceId, size, faceIndex) {\n  // Use the 6 standard Rubik's cube colors for borders\n  const borderColors = ['#FFFFFF',\n  // Face 0 (front) - White\n  '#FF8C00',\n  // Face 1 (back) - Orange  \n  '#00FF00',\n  // Face 2 (right) - Green\n  '#DC143C',\n  // Face 3 (left) - Red\n  '#0000FF',\n  // Face 4 (top) - Blue\n  '#FFD700' // Face 5 (bottom) - Yellow\n  ];\n  const borderColor = borderColors[faceIndex] || '#000000';\n  const shapes = [\n  // 0-4: Basic geometric shapes (Squares) with individual face border colors\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 11\n  }, this),\n  // Square\n\n  // 5-9: Circles with individual face border colors\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 11\n  }, this),\n  // Circle\n\n  // 10-14: Triangles (flat cones to create triangle shapes) with individual face border colors\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 11\n  }, this),\n  // Diamond\n\n  // 15-19: Diamonds (rotated squares) with individual face border colors\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 112\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 11\n  }, this),\n  // Diamond\n\n  // 20-25: Triangles (flat cones to create triangle shapes) with individual face border colors\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: borderColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 111\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 110\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 11\n  }, this) // Triangle\n  ];\n  const shapeIndex = pieceId;\n  return shapes[shapeIndex]();\n}\n\n// Function to create unique shapes for each piece\nfunction createShape(pieceId, size) {\n  const shapes = [\n  // 0-4: Basic geometric shapes (Squares)\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 157\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 204\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 126\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 277\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 322\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 246\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 158\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 205\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 127\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 278\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 323\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 247\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 159\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 206\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 128\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 279\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 324\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 248\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 207\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 129\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 280\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 325\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 249\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 11\n  }, this),\n  // Square\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 207\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 129\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 280\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 325\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 249\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 11\n  }, this),\n  // Square\n\n  // 5-9: Circles\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 158\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 199\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 127\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 272\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 312\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 241\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 159\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 200\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 128\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 273\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 313\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 242\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 201\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 129\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 274\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 314\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 243\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 161\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 202\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 130\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 275\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 315\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 244\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 11\n  }, this),\n  // Circle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size / 2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.45, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 161\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 202\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 130\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n        args: [size * 0.4, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 275\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 315\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 244\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 11\n  }, this),\n  // Circle\n\n  // 10-14: Triangles (flat cones to create triangle shapes)\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 223\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 267\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 163\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 369\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 412\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 309\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 218\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 265\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 158\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 367\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 412\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 307\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 11\n  }, this),\n  // Diamond\n\n  // 15-19: Diamonds (rotated squares)\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 215\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 262\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 155\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 364\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 304\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 216\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 263\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 156\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 365\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 410\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 305\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 217\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 157\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 411\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 218\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 265\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 158\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 367\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 412\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 307\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 11\n  }, this),\n  // Diamond\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size, size]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.95, size * 0.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 218\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 265\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 158\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [0, 0, Math.PI / 4],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [size * 0.9, size * 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 367\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 412\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 307\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 11\n  }, this),\n  // Diamond\n\n  // 20-25: Triangles (flat cones to create triangle shapes)\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"cyan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 223\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 267\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 163\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 369\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 412\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 309\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"lime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 220\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 264\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 366\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 409\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 306\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 222\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 266\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 162\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 368\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 411\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 308\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 11\n  }, this),\n  // Triangle\n  () => /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0.012],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size / 2, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.45, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 222\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 266\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 162\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0.002],\n      rotation: [Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n        args: [size * 0.4, 0.01, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 368\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 411\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 308\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 11\n  }, this) // Triangle\n  ];\n  const shapeIndex = pieceId; // Changed from pieceId % shapes.length\n  return shapes[shapeIndex]();\n}\n\n// Individual cube piece component\nfunction CubePiece({\n  position,\n  colors,\n  size = 0.95,\n  pieceId = 0,\n  isHighlighted = false,\n  highlightInfo = null\n}) {\n  _s();\n  const meshRef = useRef();\n\n  // Log piece information for debugging\n  React.useEffect(() => {\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\n    const shapeType = shapeTypes[pieceId] || 'Unknown'; // Changed from pieceId % shapeTypes.length\n    const shapeColor = shapeColors[pieceId] || 'Unknown'; // Changed from pieceId % shapeColors.length\n\n    // Debug specific pieces only\n    if (pieceId === 0 || pieceId === 17 || pieceId === 25 || pieceId === 1 || pieceId === 11) {\n      console.log(`🔍 ${shapeColor} ${shapeType} Piece ${pieceId} at position [${position.join(', ')}]`);\n      console.log(`  Stored Colors:`, colors);\n\n      // Show what colors should be visible based on position\n      const [x, y, z] = position;\n      const visibleFaces = [];\n      if (x === 1) visibleFaces.push('right');\n      if (x === -1) visibleFaces.push('left');\n      if (y === 1) visibleFaces.push('top');\n      if (y === -1) visibleFaces.push('bottom');\n      if (z === 1) visibleFaces.push('front');\n      if (z === -1) visibleFaces.push('back');\n      console.log(`  Visible faces:`, visibleFaces);\n      console.log(`  Colors on visible faces:`, visibleFaces.map(face => `${face}: ${colors[face]}`));\n    }\n  }, [pieceId, position, colors]);\n\n  // Color mapping\n  const colorMap = {\n    'white': '#FFFFFF',\n    'yellow': '#FFD700',\n    'red': '#DC143C',\n    // More vibrant red (crimson)\n    'orange': '#FF8C00',\n    // More vibrant orange\n    'blue': '#0000FF',\n    'green': '#00FF00',\n    'purple': '#800080',\n    'cyan': '#00FFFF',\n    'magenta': '#FF00FF',\n    'lime': '#00FF00',\n    'pink': '#FFC0CB',\n    'black': '#000000' // Keep black as black\n  };\n\n  // Create cube geometry\n  const cubeGeometry = useMemo(() => new THREE.BoxGeometry(size, size, size), [size]);\n\n  // Create face geometry\n  const faceGeometry = useMemo(() => {\n    const geometry = new THREE.PlaneGeometry(size, size);\n    return geometry;\n  }, [size]);\n\n  // Get the color for a face based on the face index and position\n  const getFaceColor = faceIndex => {\n    const [x, y, z] = position;\n\n    // Map face index to color property\n    let faceColor;\n    switch (faceIndex) {\n      case 0:\n        faceColor = colors.front;\n        break;\n      // Front face\n      case 1:\n        faceColor = colors.back;\n        break;\n      // Back face\n      case 2:\n        faceColor = colors.right;\n        break;\n      // Right face\n      case 3:\n        faceColor = colors.left;\n        break;\n      // Left face\n      case 4:\n        faceColor = colors.top;\n        break;\n      // Top face\n      case 5:\n        faceColor = colors.bottom;\n        break;\n      // Bottom face\n      default:\n        faceColor = 'black';\n    }\n\n    // Determine which faces are visible based on current position\n    const visibleFaces = [];\n    if (x === 1) visibleFaces.push(2); // Right face visible\n    if (x === -1) visibleFaces.push(3); // Left face visible\n    if (y === 1) visibleFaces.push(4); // Top face visible\n    if (y === -1) visibleFaces.push(5); // Bottom face visible\n    if (z === 1) visibleFaces.push(0); // Front face visible\n    if (z === -1) visibleFaces.push(1); // Back face visible\n\n    // If this face is not visible from current position, return black\n    if (!visibleFaces.includes(faceIndex)) {\n      return 'black';\n    }\n\n    // Debug logging for specific pieces\n    if (pieceId === 2 || pieceId === 11 || pieceId === 16 || pieceId === 19 || pieceId === 22 || pieceId === 25) {\n      const faceNames = ['front', 'back', 'right', 'left', 'top', 'bottom'];\n      console.log(`🎨 Piece ${pieceId} face ${faceNames[faceIndex]} (${faceIndex}) at [${x},${y},${z}]: ${faceColor} (visible: ${visibleFaces.includes(faceIndex)})`);\n    }\n    return faceColor;\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: cubeGeometry,\n      children: /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        color: \"#333333\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), [0, 1, 2, 3, 4, 5].map(faceIndex => {\n      const faceColor = getFaceColor(faceIndex);\n\n      // Define face positions and rotations correctly\n      let facePosition, faceRotation;\n      switch (faceIndex) {\n        case 0:\n          // Front face (Z+)\n          facePosition = [0, 0, size / 2 + 0.001];\n          faceRotation = [0, 0, 0];\n          break;\n        case 1:\n          // Back face (Z-)\n          facePosition = [0, 0, -size / 2 - 0.001];\n          faceRotation = [0, Math.PI, 0];\n          break;\n        case 2:\n          // Right face (X+)\n          facePosition = [size / 2 + 0.001, 0, 0];\n          faceRotation = [0, Math.PI / 2, 0];\n          break;\n        case 3:\n          // Left face (X-)\n          facePosition = [-size / 2 - 0.001, 0, 0];\n          faceRotation = [0, -Math.PI / 2, 0];\n          break;\n        case 4:\n          // Top face (Y+)\n          facePosition = [0, size / 2 + 0.001, 0];\n          faceRotation = [-Math.PI / 2, 0, 0];\n          break;\n        case 5:\n          // Bottom face (Y-)\n          facePosition = [0, -size / 2 - 0.001, 0];\n          faceRotation = [Math.PI / 2, 0, 0];\n          break;\n        default:\n          facePosition = [0, 0, 0];\n          faceRotation = [0, 0, 0];\n      }\n\n      // Check if this face should be highlighted (painted pink)\n      const faceNames = ['front', 'back', 'right', 'left', 'top', 'bottom'];\n      const currentFaceName = faceNames[faceIndex];\n      const shouldHighlight = isHighlighted && highlightInfo && highlightInfo.blackVisibleFaces && highlightInfo.blackVisibleFaces.includes(currentFaceName);\n\n      // If this face should be highlighted, paint it bright pink\n      const displayColor = shouldHighlight ? '#FF1493' : colorMap[faceColor] || '#000000';\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: facePosition,\n        rotation: faceRotation,\n        geometry: faceGeometry,\n        children: /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n          color: displayColor,\n          side: THREE.FrontSide,\n          emissive: displayColor,\n          emissiveIntensity: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)\n      }, faceIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this);\n    }), [0, 1, 2, 3, 4, 5].map(faceIndex => {\n      // Define face positions and rotations correctly (same as colored faces)\n      let facePosition, faceRotation;\n      switch (faceIndex) {\n        case 0:\n          // Front face (Z+)\n          facePosition = [0, 0, size / 2 + 0.002];\n          faceRotation = [0, 0, 0];\n          break;\n        case 1:\n          // Back face (Z-)\n          facePosition = [0, 0, -size / 2 - 0.002];\n          faceRotation = [0, Math.PI, 0];\n          break;\n        case 2:\n          // Right face (X+)\n          facePosition = [size / 2 + 0.002, 0, 0];\n          faceRotation = [0, Math.PI / 2, 0];\n          break;\n        case 3:\n          // Left face (X-)\n          facePosition = [-size / 2 - 0.002, 0, 0];\n          faceRotation = [0, -Math.PI / 2, 0];\n          break;\n        case 4:\n          // Top face (Y+)\n          facePosition = [0, size / 2 + 0.002, 0];\n          faceRotation = [-Math.PI / 2, 0, 0];\n          break;\n        case 5:\n          // Bottom face (Y-)\n          facePosition = [0, -size / 2 - 0.002, 0];\n          faceRotation = [Math.PI / 2, 0, 0];\n          break;\n        default:\n          facePosition = [0, 0, 0];\n          faceRotation = [0, 0, 0];\n      }\n\n      // Get the face color for this specific face\n      const faceColor = getFaceColor(faceIndex);\n      return /*#__PURE__*/_jsxDEV(\"group\", {\n        position: facePosition,\n        rotation: faceRotation,\n        children: createShapeWithFaceBorder(pieceId, size * 0.3, faceIndex)\n      }, `shape-${faceIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n\n// Function to get the original solved colors for a piece based on its pieceId\n_s(CubePiece, \"bKf4jm4WUTjktSFU7AKQ4whFGII=\");\n_c = CubePiece;\nfunction getOriginalColors(pieceId) {\n  // Map pieceId to original solved position\n  const positions = [];\n  for (let x = -1; x <= 1; x++) {\n    for (let y = -1; y <= 1; y++) {\n      for (let z = -1; z <= 1; z++) {\n        if (x === 0 && y === 0 && z === 0) continue;\n        positions.push([x, y, z]);\n      }\n    }\n  }\n  const originalPosition = positions[pieceId];\n  const [x, y, z] = originalPosition;\n\n  // Assign colors based on original solved position\n  // All faces should have proper colors, not black\n  let colors = {\n    front: 'white',\n    // Default to white for front\n    back: 'yellow',\n    // Default to yellow for back\n    right: 'red',\n    // Default to red for right\n    left: 'orange',\n    // Default to orange for left\n    top: 'blue',\n    // Default to blue for top\n    bottom: 'green' // Default to green for bottom\n  };\n\n  // Override with correct colors based on position in solved state\n  if (x === -1) colors.left = 'orange';\n  if (x === 1) colors.right = 'red';\n  if (y === -1) colors.bottom = 'green';\n  if (y === 1) colors.top = 'blue';\n  if (z === -1) colors.back = 'yellow';\n  if (z === 1) colors.front = 'white';\n  return colors;\n}\n\n// Custom hook for cube state management\nfunction useCubeState() {\n  _s2();\n  const [cubeState, setCubeState] = useState(() => {\n    const state = [];\n\n    // Create 26 pieces (3x3x3 minus center)\n    for (let x = -1; x <= 1; x++) {\n      for (let y = -1; y <= 1; y++) {\n        for (let z = -1; z <= 1; z++) {\n          // Skip the center piece\n          if (x === 0 && y === 0 && z === 0) continue;\n\n          // Get pieceId based on position in solved state\n          const pieceId = state.length;\n\n          // Get original colors for this piece\n          const colors = getOriginalColors(pieceId);\n\n          // Debug logging for initial state\n          console.log(`Initial piece ${pieceId} at [${x}, ${y}, ${z}]:`, colors);\n          state.push({\n            position: [x, y, z],\n            colors,\n            rotationHistory: [],\n            // Track all rotations this piece has undergone\n            pieceId: pieceId // Store the pieceId for reference\n          });\n        }\n      }\n    }\n\n    // Log the complete initial cube state as JSON\n    console.log('🎯 INITIAL CUBE STATE (End of Initial Load):');\n    console.log(JSON.stringify(state, null, 2));\n\n    // Also log to terminal (this will show in the terminal where npm start is running)\n    logToTerminal('INITIAL CUBE STATE (End of Initial Load)', state);\n    return state;\n  });\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  // Consolidated rotation logic\n  const applyRotation = useCallback((pieces, face, direction) => {\n    pieces.forEach(piece => {\n      const [x, y, z] = piece.position;\n      let newX = x,\n        newY = y,\n        newZ = z;\n      // Apply 3D transformation\n      switch (face) {\n        case 'F':\n          // Front face rotation (Z+ plane)\n          if (z === 1) {\n            // Only pieces on the front face\n            if (direction === 'clockwise') {\n              newX = -y;\n              newY = x;\n            } else {\n              newX = y;\n              newY = -x;\n            }\n          }\n          break;\n        case 'B':\n          // Back face rotation (Z- plane)\n          if (z === -1) {\n            // Only pieces on the back face\n            if (direction === 'clockwise') {\n              newX = y;\n              newY = -x;\n            } else {\n              newX = -y;\n              newY = x;\n            }\n          }\n          break;\n        case 'R':\n          // Right face rotation (X+ plane)\n          if (x === 1) {\n            // Only pieces on the right face\n            if (direction === 'clockwise') {\n              newY = -z;\n              newZ = y;\n            } else {\n              newY = z;\n              newZ = -y;\n            }\n          }\n          break;\n        case 'L':\n          // Left face rotation (X- plane)\n          if (x === -1) {\n            // Only pieces on the left face\n            if (direction === 'clockwise') {\n              newY = z;\n              newZ = -y;\n            } else {\n              newY = -z;\n              newZ = y;\n            }\n          }\n          break;\n        case 'U':\n          // Up face rotation (Y+ plane)\n          if (y === 1) {\n            // Only pieces on the top face\n            if (direction === 'clockwise') {\n              newX = -z;\n              newZ = x;\n            } else {\n              newX = z;\n              newZ = -x;\n            }\n          }\n          break;\n        case 'D':\n          // Down face rotation (Y- plane)\n          if (y === -1) {\n            // Only pieces on the bottom face\n            if (direction === 'clockwise') {\n              newX = z;\n              newZ = -x;\n            } else {\n              newX = -z;\n              newZ = x;\n            }\n          }\n          break;\n      }\n\n      // Only apply changes if the piece actually moved\n      const positionChanged = x !== newX || y !== newY || z !== newZ;\n      if (positionChanged) {\n        // Update position\n        piece.position = [newX, newY, newZ];\n\n        // Rotate the colors to match the piece's new orientation\n        const newColors = {\n          ...piece.colors\n        };\n\n        // Apply color rotation based on the face rotation\n        switch (face) {\n          case 'F':\n            // Front face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: top -> right, right -> bottom, bottom -> left, left -> top\n              const temp = newColors.top;\n              newColors.top = newColors.left;\n              newColors.left = newColors.bottom;\n              newColors.bottom = newColors.right;\n              newColors.right = temp;\n            } else {\n              // Colors rotate: top -> left, left -> bottom, bottom -> right, right -> top\n              const temp = newColors.top;\n              newColors.top = newColors.right;\n              newColors.right = newColors.bottom;\n              newColors.bottom = newColors.left;\n              newColors.left = temp;\n            }\n            break;\n          case 'B':\n            // Back face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: top -> left, left -> bottom, bottom -> right, right -> top\n              const temp = newColors.top;\n              newColors.top = newColors.right;\n              newColors.right = newColors.bottom;\n              newColors.bottom = newColors.left;\n              newColors.left = temp;\n            } else {\n              // Colors rotate: top -> right, right -> bottom, bottom -> left, left -> top\n              const temp = newColors.top;\n              newColors.top = newColors.left;\n              newColors.left = newColors.bottom;\n              newColors.bottom = newColors.right;\n              newColors.right = temp;\n            }\n            break;\n          case 'R':\n            // Right face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: top -> back, back -> bottom, bottom -> front, front -> top\n              const temp = newColors.top;\n              newColors.top = newColors.front;\n              newColors.front = newColors.bottom;\n              newColors.bottom = newColors.back;\n              newColors.back = temp;\n            } else {\n              // Colors rotate: top -> front, front -> bottom, bottom -> back, back -> top\n              const temp = newColors.top;\n              newColors.top = newColors.back;\n              newColors.back = newColors.bottom;\n              newColors.bottom = newColors.front;\n              newColors.front = temp;\n            }\n            break;\n          case 'L':\n            // Left face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: top -> front, front -> bottom, bottom -> back, back -> top\n              const temp = newColors.top;\n              newColors.top = newColors.back;\n              newColors.back = newColors.bottom;\n              newColors.bottom = newColors.front;\n              newColors.front = temp;\n            } else {\n              // Colors rotate: top -> back, back -> bottom, bottom -> front, front -> top\n              const temp = newColors.top;\n              newColors.top = newColors.front;\n              newColors.front = newColors.bottom;\n              newColors.bottom = newColors.back;\n              newColors.back = temp;\n            }\n            break;\n          case 'U':\n            // Up face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: front -> right, right -> back, back -> left, left -> front\n              const temp = newColors.front;\n              newColors.front = newColors.left;\n              newColors.left = newColors.back;\n              newColors.back = newColors.right;\n              newColors.right = temp;\n            } else {\n              // Colors rotate: front -> left, left -> back, back -> right, right -> front\n              const temp = newColors.front;\n              newColors.front = newColors.right;\n              newColors.right = newColors.back;\n              newColors.back = newColors.left;\n              newColors.left = temp;\n            }\n            break;\n          case 'D':\n            // Down face rotation\n            if (direction === 'clockwise') {\n              // Colors rotate: front -> left, left -> back, back -> right, right -> front\n              const temp = newColors.front;\n              newColors.front = newColors.right;\n              newColors.right = newColors.back;\n              newColors.back = newColors.left;\n              newColors.left = temp;\n            } else {\n              // Colors rotate: front -> right, right -> back, back -> left, left -> front\n              const temp = newColors.front;\n              newColors.front = newColors.left;\n              newColors.left = newColors.back;\n              newColors.back = newColors.right;\n              newColors.right = temp;\n            }\n            break;\n        }\n\n        // Update the piece's colors (maintain original colors, just rotate them)\n        piece.colors = newColors;\n        piece.rotationHistory.push({\n          move: face,\n          direction: direction,\n          fromPosition: [x, y, z],\n          toPosition: [newX, newY, newZ],\n          timestamp: new Date().toISOString()\n        });\n      }\n    });\n  }, []);\n\n  // Rotate a face of the cube\n  const rotateFace = useCallback((face, direction) => {\n    if (isAnimating) return;\n    setIsAnimating(true);\n    setCubeState(prevState => {\n      const newState = [...prevState];\n      const pieces = newState.map((piece, index) => ({\n        ...piece,\n        pieceId: index\n      }));\n\n      // Apply rotation using consolidated logic\n      applyRotation(pieces, face, direction);\n\n      // Update the newState with the modified pieces\n      pieces.forEach((piece, index) => {\n        newState[index] = {\n          position: piece.position,\n          colors: piece.colors,\n          rotationHistory: piece.rotationHistory\n        };\n      });\n      return newState;\n    });\n\n    // Reset animation state after a short delay\n    setTimeout(() => setIsAnimating(false), 100);\n  }, [isAnimating, applyRotation]);\n\n  // Execute scramble sequence\n  const executeScramble = useCallback(sequence => {\n    if (sequence.length === 0) {\n      setIsAnimating(false);\n\n      // Log the complete cube state as JSON at the end of scramble session\n      // We need to get the current state from the setter function\n      setCubeState(currentState => {\n        console.log('🎯 CUBE STATE AFTER SCRAMBLE (End of Scramble Session):');\n        console.log(JSON.stringify(currentState, null, 2));\n\n        // Also log to terminal (this will show in the terminal where npm start is running)\n        logToTerminal('CUBE STATE AFTER SCRAMBLE (End of Scramble Session)', currentState);\n        return currentState; // Return unchanged state\n      });\n      return;\n    }\n    const {\n      move,\n      direction\n    } = sequence[0];\n    console.log(`Executing move: ${move} ${direction}`);\n\n    // Apply the move using consolidated logic\n    setCubeState(prevState => {\n      const newState = [...prevState];\n      const pieces = newState.map((piece, index) => ({\n        ...piece,\n        pieceId: index\n      }));\n\n      // Apply rotation using consolidated logic\n      applyRotation(pieces, move, direction);\n\n      // Update the newState with the modified pieces\n      pieces.forEach((piece, index) => {\n        newState[index] = {\n          position: piece.position,\n          colors: piece.colors,\n          rotationHistory: piece.rotationHistory\n        };\n      });\n      return newState;\n    });\n\n    // Continue with next move after a short delay\n    setTimeout(() => executeScramble(sequence.slice(1)), 100);\n  }, [applyRotation]);\n\n  // Scramble the cube\n  const scramble = useCallback(() => {\n    if (isAnimating) return;\n    setIsAnimating(true);\n    const moves = ['F', 'B', 'R', 'L', 'U', 'D'];\n    const directions = ['clockwise', 'counterclockwise'];\n    const scrambleSequence = [];\n\n    // Generate 20 random moves\n    for (let i = 0; i < 20; i++) {\n      const move = moves[Math.floor(Math.random() * moves.length)];\n      const direction = directions[Math.floor(Math.random() * directions.length)];\n      scrambleSequence.push({\n        move,\n        direction\n      });\n    }\n    console.log('Scrambling with sequence:', scrambleSequence);\n\n    // Execute scramble moves\n    executeScramble(scrambleSequence);\n  }, [isAnimating, executeScramble]);\n\n  // Reset the cube to solved state\n  const reset = useCallback(() => {\n    setCubeState(() => {\n      const state = [];\n\n      // Create 26 pieces (3x3x3 minus center)\n      for (let x = -1; x <= 1; x++) {\n        for (let y = -1; y <= 1; y++) {\n          for (let z = -1; z <= 1; z++) {\n            // Skip the center piece\n            if (x === 0 && y === 0 && z === 0) continue;\n\n            // Get pieceId based on position in solved state\n            const pieceId = state.length;\n\n            // Get original colors for this piece\n            const colors = getOriginalColors(pieceId);\n\n            // Debug logging for reset state\n            console.log(`Reset piece ${pieceId} at [${x}, ${y}, ${z}]:`, colors);\n            state.push({\n              position: [x, y, z],\n              colors,\n              rotationHistory: [],\n              // Reset rotation history\n              pieceId: pieceId // Store the pieceId for reference\n            });\n          }\n        }\n      }\n      return state;\n    });\n  }, []);\n\n  // Animated solve function that reverses all moves with realistic face rotations\n  const solve = useCallback(() => {\n    if (isAnimating) return;\n    setIsAnimating(true);\n\n    // Collect all rotation history from all pieces\n    const allMoves = [];\n    cubeState.forEach(piece => {\n      piece.rotationHistory.forEach(move => {\n        allMoves.push({\n          face: move.move,\n          direction: move.direction,\n          pieceId: piece.pieceId,\n          timestamp: move.timestamp\n        });\n      });\n    });\n\n    // Sort moves by timestamp to get correct order\n    allMoves.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n    console.log(`🎯 SOLVING CUBE: Found ${allMoves.length} moves to reverse`);\n    console.log('📋 Original moves:', allMoves.map(m => `${m.face} ${m.direction}`));\n\n    // Reverse the moves (last move first, opposite direction)\n    const reversedMoves = allMoves.reverse().map(move => ({\n      face: move.face,\n      direction: move.direction === 'clockwise' ? 'counterclockwise' : 'clockwise',\n      pieceId: move.pieceId\n    }));\n    console.log('🔄 Reversed moves:', reversedMoves.map(m => `${m.face} ${m.direction}`));\n    if (reversedMoves.length === 0) {\n      console.log('⚠️ No moves to reverse - cube might already be solved');\n      setIsAnimating(false);\n      return;\n    }\n\n    // Execute moves with realistic face rotations\n    executeMovesWithAnimation(reversedMoves, () => {\n      setIsAnimating(false);\n      console.log('✅ CUBE SOLVED!');\n    });\n  }, [cubeState, isAnimating, rotateFace]);\n  return {\n    cubeState,\n    isAnimating,\n    rotateFace,\n    scramble,\n    reset,\n    solve\n  };\n}\n\n// Main cube group component with enhanced structure\n_s2(useCubeState, \"a9DANJy43sMRjQHspU+xRYbprH0=\");\nfunction CubeGroup({\n  isRotating,\n  autoRotate = false,\n  onScramble,\n  onReset,\n  onSolve,\n  onCubeStateChange,\n  highlightedPieces = []\n}) {\n  _s3();\n  const groupRef = useRef();\n  const [rotationSpeed] = useState({\n    x: 0.005,\n    y: 0.01\n  });\n  const {\n    cubeState,\n    isAnimating,\n    rotateFace,\n    scramble,\n    reset,\n    solve\n  } = useCubeState();\n\n  // Helper functions for enhanced debugging\n  const getShapeType = pieceId => {\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\n    return shapeTypes[pieceId] || 'Unknown';\n  };\n  const getShapeColor = pieceId => {\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\n    return shapeColors[pieceId] || 'Unknown';\n  };\n  const getExpectedPosition = pieceId => {\n    // Map pieceId to expected solved position\n    const positions = [];\n    for (let x = -1; x <= 1; x++) {\n      for (let y = -1; y <= 1; y++) {\n        for (let z = -1; z <= 1; z++) {\n          if (x === 0 && y === 0 && z === 0) continue;\n          positions.push([x, y, z]);\n        }\n      }\n    }\n    return positions[pieceId];\n  };\n  const getExpectedColorsForPosition = position => {\n    const [x, y, z] = position;\n    const expectedColors = {\n      front: 'black',\n      back: 'black',\n      right: 'black',\n      left: 'black',\n      top: 'black',\n      bottom: 'black'\n    };\n    if (x === -1) expectedColors.left = 'orange';\n    if (x === 1) expectedColors.right = 'red';\n    if (y === -1) expectedColors.bottom = 'green';\n    if (y === 1) expectedColors.top = 'blue';\n    if (z === -1) expectedColors.back = 'yellow';\n    if (z === 1) expectedColors.front = 'white';\n    return expectedColors;\n  };\n  const isPieceInCorrectPosition = (piece, pieceId) => {\n    // Check if piece is in its solved position\n    const [x, y, z] = piece.position;\n    const expectedPosition = getExpectedPosition(pieceId);\n    return x === expectedPosition[0] && y === expectedPosition[1] && z === expectedPosition[2];\n  };\n  const getColorMismatches = piece => {\n    // In a scrambled cube, there are no color mismatches based on position\n    // Colors should only be validated against the solved state, not current position\n    // This function is mainly for debugging and should not flag scrambled pieces as incorrect\n    return [];\n  };\n  const getVisibleFaces = position => {\n    const [x, y, z] = position;\n    const visibleFaces = [];\n    if (x === 1) visibleFaces.push('right');\n    if (x === -1) visibleFaces.push('left');\n    if (y === 1) visibleFaces.push('top');\n    if (y === -1) visibleFaces.push('bottom');\n    if (z === 1) visibleFaces.push('front');\n    if (z === -1) visibleFaces.push('back');\n    return visibleFaces;\n  };\n  const getVisibleColors = piece => {\n    const visibleFaces = getVisibleFaces(piece.position);\n    return visibleFaces.map(face => ({\n      face,\n      color: piece.colors[face]\n    }));\n  };\n  const isCubeSolved = state => {\n    return state.every((piece, index) => isPieceInCorrectPosition(piece, index));\n  };\n\n  // Expose functions to parent\n  React.useEffect(() => {\n    if (onScramble) onScramble(scramble);\n    if (onReset) onReset(reset);\n    if (onSolve) onSolve(solve);\n  }, [onScramble, onReset, onSolve, scramble, reset, solve]);\n\n  // Notify parent of cube state changes with enhanced debugging info\n  React.useEffect(() => {\n    if (onCubeStateChange && cubeState) {\n      console.log('🔍 Cube state changed, pieces count:', cubeState.length);\n      console.log('🔍 First few pieces:', cubeState.slice(0, 3));\n\n      // Create enhanced cube state with debugging information\n      const enhancedCubeState = {\n        timestamp: new Date().toISOString(),\n        totalPieces: cubeState.length,\n        pieces: cubeState.map((piece, index) => ({\n          pieceId: index,\n          position: piece.position,\n          colors: piece.colors,\n          rotationHistory: piece.rotationHistory,\n          shapeType: getShapeType(index),\n          shapeColor: getShapeColor(index),\n          // Validation data\n          validation: {\n            isInCorrectPosition: isPieceInCorrectPosition(piece, index),\n            expectedColors: getExpectedColorsForPosition(piece.position),\n            colorMismatches: getColorMismatches(piece),\n            visibleFaces: getVisibleFaces(piece.position),\n            visibleColors: getVisibleColors(piece)\n          },\n          // Debugging helpers\n          debug: {\n            positionString: `[${piece.position.join(', ')}]`,\n            colorSummary: Object.entries(piece.colors).filter(([_, color]) => color !== 'black').map(([face, color]) => `${face}:${color}`).join(', '),\n            moveCount: piece.rotationHistory.length,\n            lastMove: piece.rotationHistory[piece.rotationHistory.length - 1] || null\n          }\n        })),\n        // Global validation\n        validation: {\n          isSolved: isCubeSolved(cubeState),\n          totalMoves: cubeState.reduce((sum, piece) => sum + piece.rotationHistory.length, 0),\n          piecesInCorrectPosition: cubeState.filter((piece, index) => isPieceInCorrectPosition(piece, index)).length,\n          piecesWithColorMismatches: 0,\n          // No color mismatches in scrambled state\n          isScrambled: !isCubeSolved(cubeState) && cubeState.some(piece => piece.rotationHistory.length > 0)\n        },\n        // Metadata\n        metadata: {\n          version: \"1.0.0\",\n          exportReason: \"debugging\",\n          cubeType: \"3x3x3\",\n          coordinateSystem: \"right-handed (X-right, Y-up, Z-front)\",\n          faceMapping: {\n            front: \"Z+ (white)\",\n            back: \"Z- (yellow)\",\n            right: \"X+ (red)\",\n            left: \"X- (orange)\",\n            top: \"Y+ (blue)\",\n            bottom: \"Y- (green)\"\n          },\n          shapeMapping: {\n            \"0-4\": \"Squares (Red, Blue, Green, Orange, Purple)\",\n            \"5-9\": \"Circles (Red, Blue, Green, Orange, Purple)\",\n            \"10-14\": \"Triangles (Red, Blue, Green, Orange, Purple)\",\n            \"15-19\": \"Diamonds (Red, Blue, Green, Orange, Purple)\",\n            \"20-25\": \"Squares+White (Red, Blue, Green, Orange, Purple, Cyan)\"\n          }\n        }\n      };\n      onCubeStateChange(enhancedCubeState);\n    }\n  }, [onCubeStateChange, cubeState]);\n\n  // Auto-rotation animation\n  useFrame(() => {\n    if (groupRef.current && isRotating && !isAnimating) {\n      groupRef.current.rotation.x += rotationSpeed.x;\n      groupRef.current.rotation.y += rotationSpeed.y;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: cubeState.map((piece, index) => {\n      const isHighlighted = highlightedPieces.some(hp => hp.pieceId === index);\n      const highlightInfo = highlightedPieces.find(hp => hp.pieceId === index);\n      return /*#__PURE__*/_jsxDEV(CubePiece, {\n        position: piece.position,\n        colors: piece.colors,\n        pieceId: index,\n        isHighlighted: isHighlighted,\n        highlightInfo: highlightInfo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1116,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Rubik's Cube component\n_s3(CubeGroup, \"Lpwfx6B65L9o+Ifgmck3A4zfiV0=\", false, function () {\n  return [useCubeState, useFrame];\n});\n_c2 = CubeGroup;\nfunction RubiksCube({\n  isRotating,\n  autoRotate = false,\n  onScramble,\n  onReset,\n  onSolve,\n  onCubeStateChange,\n  highlightedPieces = []\n}) {\n  _s4();\n  const groupRef = useRef();\n  const [rotationSpeed] = useState({\n    x: 0.005,\n    y: 0.01\n  });\n  const {\n    cubeState,\n    isAnimating,\n    rotateFace,\n    scramble,\n    reset,\n    solve\n  } = useCubeState();\n\n  // Expose functions to parent\n  React.useEffect(() => {\n    if (onScramble) onScramble(scramble);\n    if (onReset) onReset(reset);\n    if (onSolve) onSolve(solve);\n  }, [onScramble, onReset, onSolve, scramble, reset, solve]);\n\n  // Notify parent of cube state changes\n  React.useEffect(() => {\n    if (onCubeStateChange && cubeState) {\n      onCubeStateChange(cubeState);\n    }\n  }, [onCubeStateChange, cubeState]);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [5, 5, 5],\n      fov: 50\n    },\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [10, 10, 5],\n      intensity: 2.0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10],\n      intensity: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10],\n      intensity: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [0, 10, 0],\n      angle: 0.3,\n      penumbra: 1,\n      intensity: 1.5,\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Environment, {\n      preset: \"sunset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CubeGroup, {\n      isRotating: isRotating,\n      autoRotate: autoRotate,\n      onScramble: onScramble,\n      onReset: onReset,\n      onSolve: onSolve,\n      onCubeStateChange: onCubeStateChange,\n      highlightedPieces: highlightedPieces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enablePan: true,\n      enableZoom: true,\n      enableRotate: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1158,\n    columnNumber: 5\n  }, this);\n}\n_s4(RubiksCube, \"9rKN9aG8ogr5mq9qeZtLOhvbnOc=\", false, function () {\n  return [useCubeState];\n});\n_c3 = RubiksCube;\nexport default RubiksCube;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CubePiece\");\n$RefreshReg$(_c2, \"CubeGroup\");\n$RefreshReg$(_c3, \"RubiksCube\");","map":{"version":3,"names":["React","useState","useRef","useMemo","useCallback","useEffect","Canvas","useFrame","OrbitControls","Environment","THREE","jsxDEV","_jsxDEV","logToTerminal","message","data","console","log","JSON","stringify","repeat","fetch","method","headers","body","then","response","ok","Error","status","catch","error","createShapeWithFaceBorder","pieceId","size","faceIndex","borderColors","borderColor","shapes","position","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","rotation","Math","PI","shapeIndex","createShape","CubePiece","colors","isHighlighted","highlightInfo","_s","meshRef","shapeTypes","shapeColors","shapeType","shapeColor","join","x","y","z","visibleFaces","push","map","face","colorMap","cubeGeometry","BoxGeometry","faceGeometry","geometry","PlaneGeometry","getFaceColor","faceColor","front","back","right","left","top","bottom","includes","faceNames","facePosition","faceRotation","currentFaceName","shouldHighlight","blackVisibleFaces","displayColor","side","FrontSide","emissive","emissiveIntensity","_c","getOriginalColors","positions","originalPosition","useCubeState","_s2","cubeState","setCubeState","state","length","rotationHistory","isAnimating","setIsAnimating","applyRotation","pieces","direction","forEach","piece","newX","newY","newZ","positionChanged","newColors","temp","move","fromPosition","toPosition","timestamp","Date","toISOString","rotateFace","prevState","newState","index","setTimeout","executeScramble","sequence","currentState","slice","scramble","moves","directions","scrambleSequence","i","floor","random","reset","solve","allMoves","sort","a","b","m","reversedMoves","reverse","executeMovesWithAnimation","CubeGroup","isRotating","autoRotate","onScramble","onReset","onSolve","onCubeStateChange","highlightedPieces","_s3","groupRef","rotationSpeed","getShapeType","getShapeColor","getExpectedPosition","getExpectedColorsForPosition","expectedColors","isPieceInCorrectPosition","expectedPosition","getColorMismatches","getVisibleFaces","getVisibleColors","isCubeSolved","every","enhancedCubeState","totalPieces","validation","isInCorrectPosition","colorMismatches","visibleColors","debug","positionString","colorSummary","Object","entries","filter","_","moveCount","lastMove","isSolved","totalMoves","reduce","sum","piecesInCorrectPosition","piecesWithColorMismatches","isScrambled","some","metadata","version","exportReason","cubeType","coordinateSystem","faceMapping","shapeMapping","current","ref","hp","find","_c2","RubiksCube","_s4","camera","fov","style","width","height","intensity","angle","penumbra","castShadow","preset","enablePan","enableZoom","enableRotate","_c3","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/components/RubiksCube.js"],"sourcesContent":["import React, { useState, useRef, useMemo, useCallback, useEffect } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { OrbitControls, Environment } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\n// Custom logging function that will be visible in terminal\r\nconst logToTerminal = (message, data = null) => {\r\n  // Log to browser console\r\n  console.log(`\\n🎯 ${message}`);\r\n  if (data) {\r\n    console.log(JSON.stringify(data, null, 2));\r\n  }\r\n  console.log('='.repeat(80) + '\\n');\r\n  \r\n  // Send to log server to print in terminal\r\n  fetch('http://localhost:3001/log', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      message: message,\r\n      data: data\r\n    })\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    console.log('✅ Log sent to terminal successfully');\r\n  })\r\n  .catch(error => {\r\n    console.error('❌ Could not send log to terminal server:', error);\r\n    console.log('💡 Make sure the log server is running with: npm run log-server');\r\n  });\r\n};\r\n\r\n// Function to create unique shapes for each piece with different border colors per face\r\nfunction createShapeWithFaceBorder(pieceId, size, faceIndex) {\r\n  // Use the 6 standard Rubik's cube colors for borders\r\n  const borderColors = [\r\n    '#FFFFFF', // Face 0 (front) - White\r\n    '#FF8C00', // Face 1 (back) - Orange  \r\n    '#00FF00', // Face 2 (right) - Green\r\n    '#DC143C', // Face 3 (left) - Red\r\n    '#0000FF', // Face 4 (top) - Blue\r\n    '#FFD700'  // Face 5 (bottom) - Yellow\r\n  ];\r\n  \r\n  const borderColor = borderColors[faceIndex] || '#000000';\r\n\r\n  const shapes = [\r\n    // 0-4: Basic geometric shapes (Squares) with individual face border colors\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n    </group>, // Square\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n    </group>, // Square\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n    </group>, // Square\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n    </group>, // Square\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n    </group>, // Square\r\n\r\n    // 5-9: Circles with individual face border colors\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n    </group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n    </group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n    </group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n    </group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"yellow\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"yellow\" /></mesh>\r\n    </group>, // Circle\r\n\r\n    // 10-14: Triangles (flat cones to create triangle shapes) with individual face border colors\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n    </group>, // Diamond\r\n\r\n    // 15-19: Diamonds (rotated squares) with individual face border colors\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"red\" /></mesh>\r\n    </group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"blue\" /></mesh>\r\n    </group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"green\" /></mesh>\r\n    </group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"orange\" /></mesh>\r\n    </group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n    </group>, // Diamond\r\n\r\n    // 20-25: Triangles (flat cones to create triangle shapes) with individual face border colors\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"purple\" /></mesh>\r\n    </group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}>\r\n      <mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"yellow\" /></mesh>\r\n      <mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color={borderColor} /></mesh>\r\n      <mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"yellow\" /></mesh>\r\n    </group> // Triangle\r\n  ];\r\n  \r\n  const shapeIndex = pieceId;\r\n  return shapes[shapeIndex]();\r\n}\r\n\r\n// Function to create unique shapes for each piece\r\nfunction createShape(pieceId, size) {\r\n  const shapes = [\r\n    // 0-4: Basic geometric shapes (Squares)\r\n    () => <group position={[0, 0, 0.012]}><mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"red\" /></mesh><mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"red\" /></mesh></group>, // Square\r\n    () => <group position={[0, 0, 0.012]}><mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"blue\" /></mesh><mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"blue\" /></mesh></group>, // Square\r\n    () => <group position={[0, 0, 0.012]}><mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"green\" /></mesh><mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"green\" /></mesh></group>, // Square\r\n    () => <group position={[0, 0, 0.012]}><mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"orange\" /></mesh><mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"orange\" /></mesh></group>, // Square\r\n    () => <group position={[0, 0, 0.012]}><mesh><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh><mesh position={[0, 0, 0.001]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh></group>, // Square\r\n\r\n    // 5-9: Circles\r\n    () => <group position={[0, 0, 0.012]}><mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"red\" /></mesh><mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"red\" /></mesh></group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}><mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"blue\" /></mesh><mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"blue\" /></mesh></group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}><mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"green\" /></mesh><mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"green\" /></mesh></group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}><mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"orange\" /></mesh><mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"orange\" /></mesh></group>, // Circle\r\n    () => <group position={[0, 0, 0.012]}><mesh><circleGeometry args={[size/2, 32]} /><meshBasicMaterial color=\"yellow\" /></mesh><mesh position={[0, 0, 0.001]}><circleGeometry args={[size*0.45, 32]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]}><circleGeometry args={[size*0.4, 32]} /><meshBasicMaterial color=\"yellow\" /></mesh></group>, // Circle\r\n\r\n    // 10-14: Triangles (flat cones to create triangle shapes)\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh></group>, // Diamond\r\n\r\n    // 15-19: Diamonds (rotated squares)\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"red\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"red\" /></mesh></group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"blue\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"blue\" /></mesh></group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"green\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"green\" /></mesh></group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"orange\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"orange\" /></mesh></group>, // Diamond\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size, size]} /><meshBasicMaterial color=\"purple\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.95, size*0.95]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[0, 0, Math.PI/4]}><planeGeometry args={[size*0.9, size*0.9]} /><meshBasicMaterial color=\"purple\" /></mesh></group>, // Diamond\r\n\r\n    // 20-25: Triangles (flat cones to create triangle shapes)\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"cyan\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"magenta\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"lime\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"pink\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"purple\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"purple\" /></mesh></group>, // Triangle\r\n    () => <group position={[0, 0, 0.012]}><mesh rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size/2, 0.01, 3]} /><meshBasicMaterial color=\"yellow\" /></mesh><mesh position={[0, 0, 0.001]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.45, 0.01, 3]} /><meshBasicMaterial color=\"black\" /></mesh><mesh position={[0, 0, 0.002]} rotation={[Math.PI/2, 0, 0]}><coneGeometry args={[size*0.4, 0.01, 3]} /><meshBasicMaterial color=\"yellow\" /></mesh></group> // Triangle\r\n  ];\r\n  \r\n  const shapeIndex = pieceId; // Changed from pieceId % shapes.length\r\n  return shapes[shapeIndex]();\r\n}\r\n\r\n// Individual cube piece component\r\nfunction CubePiece({ position, colors, size = 0.95, pieceId = 0, isHighlighted = false, highlightInfo = null }) {\r\n  const meshRef = useRef();\r\n  \r\n  // Log piece information for debugging\r\n  React.useEffect(() => {\r\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\r\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\r\n    \r\n    const shapeType = shapeTypes[pieceId] || 'Unknown'; // Changed from pieceId % shapeTypes.length\r\n    const shapeColor = shapeColors[pieceId] || 'Unknown'; // Changed from pieceId % shapeColors.length\r\n    \r\n    // Debug specific pieces only\r\n    if (pieceId === 0 || pieceId === 17 || pieceId === 25 || pieceId === 1 || pieceId === 11) {\r\n      console.log(`🔍 ${shapeColor} ${shapeType} Piece ${pieceId} at position [${position.join(', ')}]`);\r\n      console.log(`  Stored Colors:`, colors);\r\n      \r\n      // Show what colors should be visible based on position\r\n      const [x, y, z] = position;\r\n      const visibleFaces = [];\r\n      if (x === 1) visibleFaces.push('right');\r\n      if (x === -1) visibleFaces.push('left');\r\n      if (y === 1) visibleFaces.push('top');\r\n      if (y === -1) visibleFaces.push('bottom');\r\n      if (z === 1) visibleFaces.push('front');\r\n      if (z === -1) visibleFaces.push('back');\r\n      \r\n      console.log(`  Visible faces:`, visibleFaces);\r\n      console.log(`  Colors on visible faces:`, visibleFaces.map(face => `${face}: ${colors[face]}`));\r\n    }\r\n  }, [pieceId, position, colors]);\r\n\r\n  // Color mapping\r\n  const colorMap = {\r\n    'white': '#FFFFFF',\r\n    'yellow': '#FFD700',\r\n    'red': '#DC143C', // More vibrant red (crimson)\r\n    'orange': '#FF8C00', // More vibrant orange\r\n    'blue': '#0000FF',\r\n    'green': '#00FF00',\r\n    'purple': '#800080',\r\n    'cyan': '#00FFFF',\r\n    'magenta': '#FF00FF',\r\n    'lime': '#00FF00',\r\n    'pink': '#FFC0CB',\r\n    'black': '#000000' // Keep black as black\r\n  };\r\n\r\n  // Create cube geometry\r\n  const cubeGeometry = useMemo(() => new THREE.BoxGeometry(size, size, size), [size]);\r\n  \r\n  // Create face geometry\r\n  const faceGeometry = useMemo(() => {\r\n    const geometry = new THREE.PlaneGeometry(size, size);\r\n    return geometry;\r\n  }, [size]);\r\n\r\n  // Get the color for a face based on the face index and position\r\n  const getFaceColor = (faceIndex) => {\r\n    const [x, y, z] = position;\r\n    \r\n    // Map face index to color property\r\n    let faceColor;\r\n    switch (faceIndex) {\r\n      case 0: faceColor = colors.front; break;  // Front face\r\n      case 1: faceColor = colors.back; break;   // Back face\r\n      case 2: faceColor = colors.right; break;  // Right face\r\n      case 3: faceColor = colors.left; break;   // Left face\r\n      case 4: faceColor = colors.top; break;    // Top face\r\n      case 5: faceColor = colors.bottom; break; // Bottom face\r\n      default: faceColor = 'black';\r\n    }\r\n    \r\n    // Determine which faces are visible based on current position\r\n    const visibleFaces = [];\r\n    if (x === 1) visibleFaces.push(2); // Right face visible\r\n    if (x === -1) visibleFaces.push(3); // Left face visible\r\n    if (y === 1) visibleFaces.push(4); // Top face visible\r\n    if (y === -1) visibleFaces.push(5); // Bottom face visible\r\n    if (z === 1) visibleFaces.push(0); // Front face visible\r\n    if (z === -1) visibleFaces.push(1); // Back face visible\r\n    \r\n    // If this face is not visible from current position, return black\r\n    if (!visibleFaces.includes(faceIndex)) {\r\n      return 'black';\r\n    }\r\n    \r\n    // Debug logging for specific pieces\r\n    if (pieceId === 2 || pieceId === 11 || pieceId === 16 || pieceId === 19 || pieceId === 22 || pieceId === 25) {\r\n      const faceNames = ['front', 'back', 'right', 'left', 'top', 'bottom'];\r\n      console.log(`🎨 Piece ${pieceId} face ${faceNames[faceIndex]} (${faceIndex}) at [${x},${y},${z}]: ${faceColor} (visible: ${visibleFaces.includes(faceIndex)})`);\r\n    }\r\n    \r\n    return faceColor;\r\n  };\r\n\r\n  return (\r\n    <group position={position}>\r\n      {/* Solid cube base */}\r\n      <mesh geometry={cubeGeometry}>\r\n        <meshPhongMaterial color=\"#333333\" />\r\n      </mesh>\r\n      \r\n      {/* Colored faces */}\r\n      {[0, 1, 2, 3, 4, 5].map((faceIndex) => {\r\n        const faceColor = getFaceColor(faceIndex);\r\n        \r\n        // Define face positions and rotations correctly\r\n        let facePosition, faceRotation;\r\n        \r\n        switch (faceIndex) {\r\n          case 0: // Front face (Z+)\r\n            facePosition = [0, 0, size/2 + 0.001];\r\n            faceRotation = [0, 0, 0];\r\n            break;\r\n          case 1: // Back face (Z-)\r\n            facePosition = [0, 0, -size/2 - 0.001];\r\n            faceRotation = [0, Math.PI, 0];\r\n            break;\r\n          case 2: // Right face (X+)\r\n            facePosition = [size/2 + 0.001, 0, 0];\r\n            faceRotation = [0, Math.PI/2, 0];\r\n            break;\r\n          case 3: // Left face (X-)\r\n            facePosition = [-size/2 - 0.001, 0, 0];\r\n            faceRotation = [0, -Math.PI/2, 0];\r\n            break;\r\n          case 4: // Top face (Y+)\r\n            facePosition = [0, size/2 + 0.001, 0];\r\n            faceRotation = [-Math.PI/2, 0, 0];\r\n            break;\r\n          case 5: // Bottom face (Y-)\r\n            facePosition = [0, -size/2 - 0.001, 0];\r\n            faceRotation = [Math.PI/2, 0, 0];\r\n            break;\r\n          default:\r\n            facePosition = [0, 0, 0];\r\n            faceRotation = [0, 0, 0];\r\n        }\r\n        \r\n        // Check if this face should be highlighted (painted pink)\r\n        const faceNames = ['front', 'back', 'right', 'left', 'top', 'bottom'];\r\n        const currentFaceName = faceNames[faceIndex];\r\n        const shouldHighlight = isHighlighted && highlightInfo && \r\n          highlightInfo.blackVisibleFaces && \r\n          highlightInfo.blackVisibleFaces.includes(currentFaceName);\r\n        \r\n        // If this face should be highlighted, paint it bright pink\r\n        const displayColor = shouldHighlight ? '#FF1493' : (colorMap[faceColor] || '#000000');\r\n        \r\n        return (\r\n          <mesh\r\n            key={faceIndex}\r\n            position={facePosition}\r\n            rotation={faceRotation}\r\n            geometry={faceGeometry}\r\n          >\r\n            <meshPhongMaterial \r\n              color={displayColor} \r\n              side={THREE.FrontSide}\r\n              emissive={displayColor}\r\n              emissiveIntensity={0.3}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n      \r\n      {/* Debug shape on all faces */}\r\n      {[0, 1, 2, 3, 4, 5].map((faceIndex) => {\r\n        // Define face positions and rotations correctly (same as colored faces)\r\n        let facePosition, faceRotation;\r\n        \r\n        switch (faceIndex) {\r\n          case 0: // Front face (Z+)\r\n            facePosition = [0, 0, size/2 + 0.002];\r\n            faceRotation = [0, 0, 0];\r\n            break;\r\n          case 1: // Back face (Z-)\r\n            facePosition = [0, 0, -size/2 - 0.002];\r\n            faceRotation = [0, Math.PI, 0];\r\n            break;\r\n          case 2: // Right face (X+)\r\n            facePosition = [size/2 + 0.002, 0, 0];\r\n            faceRotation = [0, Math.PI/2, 0];\r\n            break;\r\n          case 3: // Left face (X-)\r\n            facePosition = [-size/2 - 0.002, 0, 0];\r\n            faceRotation = [0, -Math.PI/2, 0];\r\n            break;\r\n          case 4: // Top face (Y+)\r\n            facePosition = [0, size/2 + 0.002, 0];\r\n            faceRotation = [-Math.PI/2, 0, 0];\r\n            break;\r\n          case 5: // Bottom face (Y-)\r\n            facePosition = [0, -size/2 - 0.002, 0];\r\n            faceRotation = [Math.PI/2, 0, 0];\r\n            break;\r\n          default:\r\n            facePosition = [0, 0, 0];\r\n            faceRotation = [0, 0, 0];\r\n        }\r\n        \r\n        // Get the face color for this specific face\r\n        const faceColor = getFaceColor(faceIndex);\r\n        \r\n        return (\r\n          <group key={`shape-${faceIndex}`} position={facePosition} rotation={faceRotation}>\r\n            {createShapeWithFaceBorder(pieceId, size * 0.3, faceIndex)}\r\n          </group>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n}\r\n\r\n// Function to get the original solved colors for a piece based on its pieceId\r\nfunction getOriginalColors(pieceId) {\r\n  // Map pieceId to original solved position\r\n  const positions = [];\r\n  for (let x = -1; x <= 1; x++) {\r\n    for (let y = -1; y <= 1; y++) {\r\n      for (let z = -1; z <= 1; z++) {\r\n        if (x === 0 && y === 0 && z === 0) continue;\r\n        positions.push([x, y, z]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  const originalPosition = positions[pieceId];\r\n  const [x, y, z] = originalPosition;\r\n  \r\n  // Assign colors based on original solved position\r\n  // All faces should have proper colors, not black\r\n  let colors = {\r\n    front: 'white',   // Default to white for front\r\n    back: 'yellow',   // Default to yellow for back\r\n    right: 'red',     // Default to red for right\r\n    left: 'orange',   // Default to orange for left\r\n    top: 'blue',      // Default to blue for top\r\n    bottom: 'green'   // Default to green for bottom\r\n  };\r\n  \r\n  // Override with correct colors based on position in solved state\r\n  if (x === -1) colors.left = 'orange';\r\n  if (x === 1) colors.right = 'red';\r\n  if (y === -1) colors.bottom = 'green';\r\n  if (y === 1) colors.top = 'blue';\r\n  if (z === -1) colors.back = 'yellow';\r\n  if (z === 1) colors.front = 'white';\r\n  \r\n  return colors;\r\n}\r\n\r\n// Custom hook for cube state management\r\nfunction useCubeState() {\r\n  const [cubeState, setCubeState] = useState(() => {\r\n    const state = [];\r\n    \r\n    // Create 26 pieces (3x3x3 minus center)\r\n    for (let x = -1; x <= 1; x++) {\r\n      for (let y = -1; y <= 1; y++) {\r\n        for (let z = -1; z <= 1; z++) {\r\n          // Skip the center piece\r\n          if (x === 0 && y === 0 && z === 0) continue;\r\n          \r\n          // Get pieceId based on position in solved state\r\n          const pieceId = state.length;\r\n          \r\n          // Get original colors for this piece\r\n          const colors = getOriginalColors(pieceId);\r\n          \r\n          // Debug logging for initial state\r\n          console.log(`Initial piece ${pieceId} at [${x}, ${y}, ${z}]:`, colors);\r\n          \r\n          state.push({ \r\n            position: [x, y, z], \r\n            colors,\r\n            rotationHistory: [], // Track all rotations this piece has undergone\r\n            pieceId: pieceId // Store the pieceId for reference\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Log the complete initial cube state as JSON\r\n    console.log('🎯 INITIAL CUBE STATE (End of Initial Load):');\r\n    console.log(JSON.stringify(state, null, 2));\r\n    \r\n    // Also log to terminal (this will show in the terminal where npm start is running)\r\n    logToTerminal('INITIAL CUBE STATE (End of Initial Load)', state);\r\n    \r\n    return state;\r\n  });\r\n\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  // Consolidated rotation logic\r\n  const applyRotation = useCallback((pieces, face, direction) => {\r\n    pieces.forEach(piece => {\r\n      const [x, y, z] = piece.position;\r\n      let newX = x, newY = y, newZ = z;\r\n      // Apply 3D transformation\r\n      switch (face) {\r\n        case 'F': // Front face rotation (Z+ plane)\r\n          if (z === 1) { // Only pieces on the front face\r\n            if (direction === 'clockwise') {\r\n              newX = -y;\r\n              newY = x;\r\n            } else {\r\n              newX = y;\r\n              newY = -x;\r\n            }\r\n          }\r\n          break;\r\n        case 'B': // Back face rotation (Z- plane)\r\n          if (z === -1) { // Only pieces on the back face\r\n            if (direction === 'clockwise') {\r\n              newX = y;\r\n              newY = -x;\r\n            } else {\r\n              newX = -y;\r\n              newY = x;\r\n            }\r\n          }\r\n          break;\r\n        case 'R': // Right face rotation (X+ plane)\r\n          if (x === 1) { // Only pieces on the right face\r\n            if (direction === 'clockwise') {\r\n              newY = -z;\r\n              newZ = y;\r\n            } else {\r\n              newY = z;\r\n              newZ = -y;\r\n            }\r\n          }\r\n          break;\r\n        case 'L': // Left face rotation (X- plane)\r\n          if (x === -1) { // Only pieces on the left face\r\n            if (direction === 'clockwise') {\r\n              newY = z;\r\n              newZ = -y;\r\n            } else {\r\n              newY = -z;\r\n              newZ = y;\r\n            }\r\n          }\r\n          break;\r\n        case 'U': // Up face rotation (Y+ plane)\r\n          if (y === 1) { // Only pieces on the top face\r\n            if (direction === 'clockwise') {\r\n              newX = -z;\r\n              newZ = x;\r\n            } else {\r\n              newX = z;\r\n              newZ = -x;\r\n            }\r\n          }\r\n          break;\r\n        case 'D': // Down face rotation (Y- plane)\r\n          if (y === -1) { // Only pieces on the bottom face\r\n            if (direction === 'clockwise') {\r\n              newX = z;\r\n              newZ = -x;\r\n            } else {\r\n              newX = -z;\r\n              newZ = x;\r\n            }\r\n          }\r\n          break;\r\n      }\r\n      \r\n      // Only apply changes if the piece actually moved\r\n      const positionChanged = (x !== newX || y !== newY || z !== newZ);\r\n      \r\n      if (positionChanged) {\r\n        // Update position\r\n        piece.position = [newX, newY, newZ];\r\n        \r\n        // Rotate the colors to match the piece's new orientation\r\n        const newColors = { ...piece.colors };\r\n        \r\n        // Apply color rotation based on the face rotation\r\n        switch (face) {\r\n          case 'F': // Front face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: top -> right, right -> bottom, bottom -> left, left -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.left;\r\n              newColors.left = newColors.bottom;\r\n              newColors.bottom = newColors.right;\r\n              newColors.right = temp;\r\n            } else {\r\n              // Colors rotate: top -> left, left -> bottom, bottom -> right, right -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.right;\r\n              newColors.right = newColors.bottom;\r\n              newColors.bottom = newColors.left;\r\n              newColors.left = temp;\r\n            }\r\n            break;\r\n          case 'B': // Back face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: top -> left, left -> bottom, bottom -> right, right -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.right;\r\n              newColors.right = newColors.bottom;\r\n              newColors.bottom = newColors.left;\r\n              newColors.left = temp;\r\n            } else {\r\n              // Colors rotate: top -> right, right -> bottom, bottom -> left, left -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.left;\r\n              newColors.left = newColors.bottom;\r\n              newColors.bottom = newColors.right;\r\n              newColors.right = temp;\r\n            }\r\n            break;\r\n          case 'R': // Right face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: top -> back, back -> bottom, bottom -> front, front -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.front;\r\n              newColors.front = newColors.bottom;\r\n              newColors.bottom = newColors.back;\r\n              newColors.back = temp;\r\n            } else {\r\n              // Colors rotate: top -> front, front -> bottom, bottom -> back, back -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.back;\r\n              newColors.back = newColors.bottom;\r\n              newColors.bottom = newColors.front;\r\n              newColors.front = temp;\r\n            }\r\n            break;\r\n          case 'L': // Left face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: top -> front, front -> bottom, bottom -> back, back -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.back;\r\n              newColors.back = newColors.bottom;\r\n              newColors.bottom = newColors.front;\r\n              newColors.front = temp;\r\n            } else {\r\n              // Colors rotate: top -> back, back -> bottom, bottom -> front, front -> top\r\n              const temp = newColors.top;\r\n              newColors.top = newColors.front;\r\n              newColors.front = newColors.bottom;\r\n              newColors.bottom = newColors.back;\r\n              newColors.back = temp;\r\n            }\r\n            break;\r\n          case 'U': // Up face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: front -> right, right -> back, back -> left, left -> front\r\n              const temp = newColors.front;\r\n              newColors.front = newColors.left;\r\n              newColors.left = newColors.back;\r\n              newColors.back = newColors.right;\r\n              newColors.right = temp;\r\n            } else {\r\n              // Colors rotate: front -> left, left -> back, back -> right, right -> front\r\n              const temp = newColors.front;\r\n              newColors.front = newColors.right;\r\n              newColors.right = newColors.back;\r\n              newColors.back = newColors.left;\r\n              newColors.left = temp;\r\n            }\r\n            break;\r\n          case 'D': // Down face rotation\r\n            if (direction === 'clockwise') {\r\n              // Colors rotate: front -> left, left -> back, back -> right, right -> front\r\n              const temp = newColors.front;\r\n              newColors.front = newColors.right;\r\n              newColors.right = newColors.back;\r\n              newColors.back = newColors.left;\r\n              newColors.left = temp;\r\n            } else {\r\n              // Colors rotate: front -> right, right -> back, back -> left, left -> front\r\n              const temp = newColors.front;\r\n              newColors.front = newColors.left;\r\n              newColors.left = newColors.back;\r\n              newColors.back = newColors.right;\r\n              newColors.right = temp;\r\n            }\r\n            break;\r\n        }\r\n        \r\n        // Update the piece's colors (maintain original colors, just rotate them)\r\n        piece.colors = newColors;\r\n        \r\n        piece.rotationHistory.push({\r\n          move: face,\r\n          direction: direction,\r\n          fromPosition: [x, y, z],\r\n          toPosition: [newX, newY, newZ],\r\n          timestamp: new Date().toISOString()\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Rotate a face of the cube\r\n  const rotateFace = useCallback((face, direction) => {\r\n    if (isAnimating) return;\r\n    \r\n    setIsAnimating(true);\r\n    \r\n    setCubeState(prevState => {\r\n      const newState = [...prevState];\r\n      const pieces = newState.map((piece, index) => ({ ...piece, pieceId: index }));\r\n      \r\n      // Apply rotation using consolidated logic\r\n      applyRotation(pieces, face, direction);\r\n\r\n      // Update the newState with the modified pieces\r\n      pieces.forEach((piece, index) => {\r\n        newState[index] = {\r\n          position: piece.position,\r\n          colors: piece.colors,\r\n          rotationHistory: piece.rotationHistory\r\n        };\r\n      });\r\n      \r\n      return newState;\r\n    });\r\n    \r\n    // Reset animation state after a short delay\r\n    setTimeout(() => setIsAnimating(false), 100);\r\n  }, [isAnimating, applyRotation]);\r\n\r\n  // Execute scramble sequence\r\n  const executeScramble = useCallback((sequence) => {\r\n    if (sequence.length === 0) {\r\n      setIsAnimating(false);\r\n      \r\n      // Log the complete cube state as JSON at the end of scramble session\r\n      // We need to get the current state from the setter function\r\n      setCubeState(currentState => {\r\n        console.log('🎯 CUBE STATE AFTER SCRAMBLE (End of Scramble Session):');\r\n        console.log(JSON.stringify(currentState, null, 2));\r\n        \r\n        // Also log to terminal (this will show in the terminal where npm start is running)\r\n        logToTerminal('CUBE STATE AFTER SCRAMBLE (End of Scramble Session)', currentState);\r\n        \r\n        return currentState; // Return unchanged state\r\n      });\r\n      \r\n      return;\r\n    }\r\n    \r\n    const { move, direction } = sequence[0];\r\n    console.log(`Executing move: ${move} ${direction}`);\r\n    \r\n    // Apply the move using consolidated logic\r\n    setCubeState(prevState => {\r\n      const newState = [...prevState];\r\n      const pieces = newState.map((piece, index) => ({ ...piece, pieceId: index }));\r\n      \r\n      // Apply rotation using consolidated logic\r\n      applyRotation(pieces, move, direction);\r\n\r\n      // Update the newState with the modified pieces\r\n      pieces.forEach((piece, index) => {\r\n        newState[index] = {\r\n          position: piece.position,\r\n          colors: piece.colors,\r\n          rotationHistory: piece.rotationHistory\r\n        };\r\n      });\r\n      \r\n      return newState;\r\n    });\r\n    \r\n    // Continue with next move after a short delay\r\n    setTimeout(() => executeScramble(sequence.slice(1)), 100);\r\n  }, [applyRotation]);\r\n\r\n  // Scramble the cube\r\n  const scramble = useCallback(() => {\r\n    if (isAnimating) return;\r\n    \r\n    setIsAnimating(true);\r\n    \r\n    const moves = ['F', 'B', 'R', 'L', 'U', 'D'];\r\n    const directions = ['clockwise', 'counterclockwise'];\r\n    const scrambleSequence = [];\r\n    \r\n    // Generate 20 random moves\r\n    for (let i = 0; i < 20; i++) {\r\n      const move = moves[Math.floor(Math.random() * moves.length)];\r\n      const direction = directions[Math.floor(Math.random() * directions.length)];\r\n      scrambleSequence.push({ move, direction });\r\n    }\r\n    \r\n    console.log('Scrambling with sequence:', scrambleSequence);\r\n    \r\n    // Execute scramble moves\r\n    executeScramble(scrambleSequence);\r\n  }, [isAnimating, executeScramble]);\r\n\r\n  // Reset the cube to solved state\r\n  const reset = useCallback(() => {\r\n    setCubeState(() => {\r\n      const state = [];\r\n      \r\n      // Create 26 pieces (3x3x3 minus center)\r\n      for (let x = -1; x <= 1; x++) {\r\n        for (let y = -1; y <= 1; y++) {\r\n          for (let z = -1; z <= 1; z++) {\r\n            // Skip the center piece\r\n            if (x === 0 && y === 0 && z === 0) continue;\r\n            \r\n            // Get pieceId based on position in solved state\r\n            const pieceId = state.length;\r\n            \r\n            // Get original colors for this piece\r\n            const colors = getOriginalColors(pieceId);\r\n            \r\n            // Debug logging for reset state\r\n            console.log(`Reset piece ${pieceId} at [${x}, ${y}, ${z}]:`, colors);\r\n            \r\n            state.push({ \r\n              position: [x, y, z], \r\n              colors,\r\n              rotationHistory: [], // Reset rotation history\r\n              pieceId: pieceId // Store the pieceId for reference\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      return state;\r\n    });\r\n  }, []);\r\n\r\n  // Animated solve function that reverses all moves with realistic face rotations\r\n  const solve = useCallback(() => {\r\n    if (isAnimating) return;\r\n    \r\n    setIsAnimating(true);\r\n    \r\n    // Collect all rotation history from all pieces\r\n    const allMoves = [];\r\n    cubeState.forEach(piece => {\r\n      piece.rotationHistory.forEach(move => {\r\n        allMoves.push({\r\n          face: move.move,\r\n          direction: move.direction,\r\n          pieceId: piece.pieceId,\r\n          timestamp: move.timestamp\r\n        });\r\n      });\r\n    });\r\n    \r\n    // Sort moves by timestamp to get correct order\r\n    allMoves.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n    \r\n    console.log(`🎯 SOLVING CUBE: Found ${allMoves.length} moves to reverse`);\r\n    console.log('📋 Original moves:', allMoves.map(m => `${m.face} ${m.direction}`));\r\n    \r\n    // Reverse the moves (last move first, opposite direction)\r\n    const reversedMoves = allMoves.reverse().map(move => ({\r\n      face: move.face,\r\n      direction: move.direction === 'clockwise' ? 'counterclockwise' : 'clockwise',\r\n      pieceId: move.pieceId\r\n    }));\r\n    \r\n    console.log('🔄 Reversed moves:', reversedMoves.map(m => `${m.face} ${m.direction}`));\r\n    \r\n    if (reversedMoves.length === 0) {\r\n      console.log('⚠️ No moves to reverse - cube might already be solved');\r\n      setIsAnimating(false);\r\n      return;\r\n    }\r\n    \r\n    // Execute moves with realistic face rotations\r\n    executeMovesWithAnimation(reversedMoves, () => {\r\n      setIsAnimating(false);\r\n      console.log('✅ CUBE SOLVED!');\r\n    });\r\n    \r\n  }, [cubeState, isAnimating, rotateFace]);\r\n\r\n  return {\r\n    cubeState,\r\n    isAnimating,\r\n    rotateFace,\r\n    scramble,\r\n    reset,\r\n    solve\r\n  };\r\n}\r\n\r\n// Main cube group component with enhanced structure\r\nfunction CubeGroup({ isRotating, autoRotate = false, onScramble, onReset, onSolve, onCubeStateChange, highlightedPieces = [] }) {\r\n  const groupRef = useRef();\r\n  const [rotationSpeed] = useState({ x: 0.005, y: 0.01 });\r\n  \r\n  const { cubeState, isAnimating, rotateFace, scramble, reset, solve } = useCubeState();\r\n  \r\n  // Helper functions for enhanced debugging\r\n  const getShapeType = (pieceId) => {\r\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\r\n    return shapeTypes[pieceId] || 'Unknown';\r\n  };\r\n\r\n  const getShapeColor = (pieceId) => {\r\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\r\n    return shapeColors[pieceId] || 'Unknown';\r\n  };\r\n\r\n  const getExpectedPosition = (pieceId) => {\r\n    // Map pieceId to expected solved position\r\n    const positions = [];\r\n    for (let x = -1; x <= 1; x++) {\r\n      for (let y = -1; y <= 1; y++) {\r\n        for (let z = -1; z <= 1; z++) {\r\n          if (x === 0 && y === 0 && z === 0) continue;\r\n          positions.push([x, y, z]);\r\n        }\r\n      }\r\n    }\r\n    return positions[pieceId];\r\n  };\r\n\r\n  const getExpectedColorsForPosition = (position) => {\r\n    const [x, y, z] = position;\r\n    const expectedColors = {\r\n      front: 'black',\r\n      back: 'black',\r\n      right: 'black',\r\n      left: 'black',\r\n      top: 'black',\r\n      bottom: 'black'\r\n    };\r\n    \r\n    if (x === -1) expectedColors.left = 'orange';\r\n    if (x === 1) expectedColors.right = 'red';\r\n    if (y === -1) expectedColors.bottom = 'green';\r\n    if (y === 1) expectedColors.top = 'blue';\r\n    if (z === -1) expectedColors.back = 'yellow';\r\n    if (z === 1) expectedColors.front = 'white';\r\n    \r\n    return expectedColors;\r\n  };\r\n\r\n  const isPieceInCorrectPosition = (piece, pieceId) => {\r\n    // Check if piece is in its solved position\r\n    const [x, y, z] = piece.position;\r\n    const expectedPosition = getExpectedPosition(pieceId);\r\n    return x === expectedPosition[0] && y === expectedPosition[1] && z === expectedPosition[2];\r\n  };\r\n\r\n  const getColorMismatches = (piece) => {\r\n    // In a scrambled cube, there are no color mismatches based on position\r\n    // Colors should only be validated against the solved state, not current position\r\n    // This function is mainly for debugging and should not flag scrambled pieces as incorrect\r\n    return [];\r\n  };\r\n\r\n  const getVisibleFaces = (position) => {\r\n    const [x, y, z] = position;\r\n    const visibleFaces = [];\r\n    if (x === 1) visibleFaces.push('right');\r\n    if (x === -1) visibleFaces.push('left');\r\n    if (y === 1) visibleFaces.push('top');\r\n    if (y === -1) visibleFaces.push('bottom');\r\n    if (z === 1) visibleFaces.push('front');\r\n    if (z === -1) visibleFaces.push('back');\r\n    return visibleFaces;\r\n  };\r\n\r\n  const getVisibleColors = (piece) => {\r\n    const visibleFaces = getVisibleFaces(piece.position);\r\n    return visibleFaces.map(face => ({\r\n      face,\r\n      color: piece.colors[face]\r\n    }));\r\n  };\r\n\r\n  const isCubeSolved = (state) => {\r\n    return state.every((piece, index) => isPieceInCorrectPosition(piece, index));\r\n  };\r\n  \r\n  // Expose functions to parent\r\n  React.useEffect(() => {\r\n    if (onScramble) onScramble(scramble);\r\n    if (onReset) onReset(reset);\r\n    if (onSolve) onSolve(solve);\r\n  }, [onScramble, onReset, onSolve, scramble, reset, solve]);\r\n  \r\n  // Notify parent of cube state changes with enhanced debugging info\r\n  React.useEffect(() => {\r\n    if (onCubeStateChange && cubeState) {\r\n      console.log('🔍 Cube state changed, pieces count:', cubeState.length);\r\n      console.log('🔍 First few pieces:', cubeState.slice(0, 3));\r\n      \r\n      // Create enhanced cube state with debugging information\r\n      const enhancedCubeState = {\r\n        timestamp: new Date().toISOString(),\r\n        totalPieces: cubeState.length,\r\n        pieces: cubeState.map((piece, index) => ({\r\n          pieceId: index,\r\n          position: piece.position,\r\n          colors: piece.colors,\r\n          rotationHistory: piece.rotationHistory,\r\n          shapeType: getShapeType(index),\r\n          shapeColor: getShapeColor(index),\r\n          // Validation data\r\n          validation: {\r\n            isInCorrectPosition: isPieceInCorrectPosition(piece, index),\r\n            expectedColors: getExpectedColorsForPosition(piece.position),\r\n            colorMismatches: getColorMismatches(piece),\r\n            visibleFaces: getVisibleFaces(piece.position),\r\n            visibleColors: getVisibleColors(piece)\r\n          },\r\n          // Debugging helpers\r\n          debug: {\r\n            positionString: `[${piece.position.join(', ')}]`,\r\n            colorSummary: Object.entries(piece.colors)\r\n              .filter(([_, color]) => color !== 'black')\r\n              .map(([face, color]) => `${face}:${color}`)\r\n              .join(', '),\r\n            moveCount: piece.rotationHistory.length,\r\n            lastMove: piece.rotationHistory[piece.rotationHistory.length - 1] || null\r\n          }\r\n        })),\r\n        // Global validation\r\n        validation: {\r\n          isSolved: isCubeSolved(cubeState),\r\n          totalMoves: cubeState.reduce((sum, piece) => sum + piece.rotationHistory.length, 0),\r\n          piecesInCorrectPosition: cubeState.filter((piece, index) => \r\n            isPieceInCorrectPosition(piece, index)\r\n          ).length,\r\n          piecesWithColorMismatches: 0, // No color mismatches in scrambled state\r\n          isScrambled: !isCubeSolved(cubeState) && cubeState.some(piece => piece.rotationHistory.length > 0)\r\n        },\r\n        // Metadata\r\n        metadata: {\r\n          version: \"1.0.0\",\r\n          exportReason: \"debugging\",\r\n          cubeType: \"3x3x3\",\r\n          coordinateSystem: \"right-handed (X-right, Y-up, Z-front)\",\r\n          faceMapping: {\r\n            front: \"Z+ (white)\",\r\n            back: \"Z- (yellow)\", \r\n            right: \"X+ (red)\",\r\n            left: \"X- (orange)\",\r\n            top: \"Y+ (blue)\",\r\n            bottom: \"Y- (green)\"\r\n          },\r\n          shapeMapping: {\r\n            \"0-4\": \"Squares (Red, Blue, Green, Orange, Purple)\",\r\n            \"5-9\": \"Circles (Red, Blue, Green, Orange, Purple)\", \r\n            \"10-14\": \"Triangles (Red, Blue, Green, Orange, Purple)\",\r\n            \"15-19\": \"Diamonds (Red, Blue, Green, Orange, Purple)\",\r\n            \"20-25\": \"Squares+White (Red, Blue, Green, Orange, Purple, Cyan)\"\r\n          }\r\n        }\r\n      };\r\n      \r\n      onCubeStateChange(enhancedCubeState);\r\n    }\r\n  }, [onCubeStateChange, cubeState]);\r\n\r\n  // Auto-rotation animation\r\n  useFrame(() => {\r\n    if (groupRef.current && isRotating && !isAnimating) {\r\n      groupRef.current.rotation.x += rotationSpeed.x;\r\n      groupRef.current.rotation.y += rotationSpeed.y;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      {cubeState.map((piece, index) => {\r\n        const isHighlighted = highlightedPieces.some(hp => hp.pieceId === index);\r\n        const highlightInfo = highlightedPieces.find(hp => hp.pieceId === index);\r\n        \r\n        return (\r\n          <CubePiece\r\n            key={index}\r\n            position={piece.position}\r\n            colors={piece.colors}\r\n            pieceId={index}\r\n            isHighlighted={isHighlighted}\r\n            highlightInfo={highlightInfo}\r\n          />\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n}\r\n\r\n// Main Rubik's Cube component\r\nfunction RubiksCube({ isRotating, autoRotate = false, onScramble, onReset, onSolve, onCubeStateChange, highlightedPieces = [] }) {\r\n  const groupRef = useRef();\r\n  const [rotationSpeed] = useState({ x: 0.005, y: 0.01 });\r\n  \r\n  const { cubeState, isAnimating, rotateFace, scramble, reset, solve } = useCubeState();\r\n  \r\n  // Expose functions to parent\r\n  React.useEffect(() => {\r\n    if (onScramble) onScramble(scramble);\r\n    if (onReset) onReset(reset);\r\n    if (onSolve) onSolve(solve);\r\n  }, [onScramble, onReset, onSolve, scramble, reset, solve]);\r\n  \r\n  // Notify parent of cube state changes\r\n  React.useEffect(() => {\r\n    if (onCubeStateChange && cubeState) {\r\n      onCubeStateChange(cubeState);\r\n    }\r\n  }, [onCubeStateChange, cubeState]);\r\n\r\n  return (\r\n    <Canvas\r\n      camera={{ position: [5, 5, 5], fov: 50 }}\r\n      style={{ width: '100%', height: '100%' }}\r\n    >\r\n      {/* Enhanced lighting setup - dimmed for better color distinction */}\r\n      <ambientLight intensity={0.8} />\r\n      <directionalLight position={[10, 10, 5]} intensity={2.0} />\r\n      <pointLight position={[10, 10, 10]} intensity={1.5} />\r\n      <pointLight position={[-10, -10, -10]} intensity={1.5} />\r\n      <spotLight\r\n        position={[0, 10, 0]}\r\n        angle={0.3}\r\n        penumbra={1}\r\n        intensity={1.5}\r\n        castShadow\r\n      />\r\n      \r\n      {/* Environment for better lighting */}\r\n      <Environment preset=\"sunset\" />\r\n      \r\n      <CubeGroup \r\n        isRotating={isRotating} \r\n        autoRotate={autoRotate}\r\n        onScramble={onScramble}\r\n        onReset={onReset}\r\n        onSolve={onSolve}\r\n        onCubeStateChange={onCubeStateChange}\r\n        highlightedPieces={highlightedPieces}\r\n      />\r\n      \r\n      <OrbitControls enablePan={true} enableZoom={true} enableRotate={true} />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default RubiksCube;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}