{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\components\\\\IdentifyIncorrectShapes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IdentifyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n  max-height: 500px;\n  overflow-y: auto;\n`;\n_c = IdentifyContainer;\nconst SectionTitle = styled.h3`\n  color: white;\n  text-align: center;\n  margin: 0 0 15px 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c2 = SectionTitle;\nconst ButtonGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n_c3 = ButtonGrid;\nconst IdentifyButton = styled.button`\n  padding: 12px 16px;\n  border: 2px solid ${props => {\n  if (props.$isActive) return '#4CAF50';\n  if (props.$hasIncorrect) return '#ff4757';\n  return 'rgba(255, 255, 255, 0.3)';\n}};\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  transition: all 0.3s ease;\n  background: ${props => {\n  if (props.disabled) return 'rgba(100, 100, 100, 0.3)';\n  if (props.$isActive) return 'rgba(76, 175, 80, 0.2)';\n  if (props.$hasIncorrect) return 'rgba(255, 71, 87, 0.2)';\n  return 'rgba(255, 255, 255, 0.1)';\n}};\n  color: ${props => {\n  if (props.disabled) return '#666';\n  if (props.$isActive) return '#4CAF50';\n  if (props.$hasIncorrect) return '#ff4757';\n  return 'white';\n}};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  \n  &:hover {\n    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n    box-shadow: ${props => props.disabled ? 'none' : '0 4px 12px rgba(0, 0, 0, 0.3)'};\n    background: ${props => {\n  if (props.disabled) return 'rgba(100, 100, 100, 0.3)';\n  if (props.$isActive) return 'rgba(76, 175, 80, 0.3)';\n  if (props.$hasIncorrect) return 'rgba(255, 71, 87, 0.3)';\n  return 'rgba(255, 255, 255, 0.2)';\n}};\n  }\n  \n  &:active {\n    transform: ${props => props.disabled ? 'none' : 'translateY(0)'};\n  }\n`;\n_c4 = IdentifyButton;\nconst ButtonContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n`;\n_c5 = ButtonContent;\nconst ButtonTitle = styled.span`\n  font-size: 14px;\n  font-weight: 700;\n`;\n_c6 = ButtonTitle;\nconst ButtonSubtitle = styled.span`\n  font-size: 11px;\n  opacity: 0.8;\n`;\n_c7 = ButtonSubtitle;\nconst CountBadge = styled.span`\n  background: ${props => props.$hasIncorrect ? '#ff4757' : '#4CAF50'};\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  font-weight: bold;\n  margin-top: 4px;\n`;\nconst Instructions = styled.p`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 13px;\n  text-align: center;\n  margin: 0 0 15px 0;\n  line-height: 1.4;\n`;\n_c8 = Instructions;\nconst StatusMessage = styled.div`\n  padding: 10px;\n  border-radius: 8px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 600;\n  background: ${props => {\n  if (props.$type === 'success') return 'rgba(76, 175, 80, 0.2)';\n  if (props.$type === 'warning') return 'rgba(255, 193, 7, 0.2)';\n  if (props.$type === 'error') return 'rgba(244, 67, 54, 0.2)';\n  return 'rgba(33, 150, 243, 0.2)';\n}};\n  color: ${props => {\n  if (props.$type === 'success') return '#4CAF50';\n  if (props.$type === 'warning') return '#FFC107';\n  if (props.$type === 'error') return '#f44336';\n  return '#2196F3';\n}};\n  border: 1px solid ${props => {\n  if (props.$type === 'success') return 'rgba(76, 175, 80, 0.3)';\n  if (props.$type === 'warning') return 'rgba(255, 193, 7, 0.3)';\n  if (props.$type === 'error') return 'rgba(244, 67, 54, 0.3)';\n  return 'rgba(33, 150, 243, 0.3)';\n}};\n`;\n\n// Custom logging function\n_c9 = StatusMessage;\nconst logToTerminal = (message, data = null) => {\n  console.log(`\\n🎯 ${message}`);\n  if (data) {\n    console.log(JSON.stringify(data, null, 2));\n  }\n  console.log('='.repeat(80) + '\\n');\n\n  // Send to log server\n  fetch('http://localhost:3001/log', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message: message,\n      data: data\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    console.log('✅ Log sent to terminal successfully');\n  }).catch(error => {\n    console.error('❌ Could not send log to terminal server:', error);\n  });\n};\nfunction IdentifyIncorrectShapes({\n  isScrambling,\n  cubeState,\n  onIdentification\n}) {\n  _s();\n  const [activeIdentification, setActiveIdentification] = useState(null);\n  const [identificationResults, setIdentificationResults] = useState({});\n\n  // Helper functions\n  const getShapeType = pieceId => {\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\n    return shapeTypes[pieceId] || 'Unknown';\n  };\n  const getShapeColor = pieceId => {\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\n    return shapeColors[pieceId] || 'Unknown';\n  };\n  const getExpectedPosition = pieceId => {\n    const positions = [];\n    for (let x = -1; x <= 1; x++) {\n      for (let y = -1; y <= 1; y++) {\n        for (let z = -1; z <= 1; z++) {\n          if (x === 0 && y === 0 && z === 0) continue;\n          positions.push([x, y, z]);\n        }\n      }\n    }\n    return positions[pieceId];\n  };\n  const isPieceInCorrectPosition = (piece, pieceId) => {\n    if (!piece || !piece.position) return false;\n    const expectedPosition = getExpectedPosition(pieceId);\n    return JSON.stringify(piece.position) === JSON.stringify(expectedPosition);\n  };\n  const getExpectedBorderColor = faceIndex => {\n    const borderColors = ['#FFFFFF',\n    // Face 0 (front) - White\n    '#FF8C00',\n    // Face 1 (back) - Orange  \n    '#00FF00',\n    // Face 2 (right) - Green\n    '#DC143C',\n    // Face 3 (left) - Red\n    '#0000FF',\n    // Face 4 (top) - Blue\n    '#FFD700' // Face 5 (bottom) - Yellow\n    ];\n    return borderColors[faceIndex] || '#000000';\n  };\n  const getBorderColorName = faceIndex => {\n    const colorNames = ['White', 'Orange', 'Green', 'Red', 'Blue', 'Yellow'];\n    return colorNames[faceIndex] || 'Unknown';\n  };\n\n  // Get pieces data\n  const getPieces = () => {\n    if (Array.isArray(cubeState)) {\n      return cubeState.map((piece, index) => ({\n        pieceId: index,\n        position: piece.position,\n        colors: piece.colors,\n        rotationHistory: piece.rotationHistory || []\n      }));\n    } else if (cubeState !== null && cubeState !== void 0 && cubeState.pieces) {\n      return cubeState.pieces;\n    }\n    return [];\n  };\n  const pieces = getPieces();\n\n  // Identify incorrect specific piece (shape+color+border combination)\n  const identifyIncorrectPiece = pieceId => {\n    const piece = pieces.find(p => p.pieceId === pieceId);\n    if (!piece) return null;\n    const isInCorrectPosition = isPieceInCorrectPosition(piece, pieceId);\n    const shapeType = getShapeType(pieceId);\n    const shapeColor = getShapeColor(pieceId);\n    const expectedPosition = getExpectedPosition(pieceId);\n\n    // Get the expected border colors for this piece's current position\n    const [x, y, z] = piece.position;\n    const expectedBorderColors = [];\n    if (x === 1) expectedBorderColors.push({\n      faceIndex: 2,\n      color: 'Green',\n      hex: '#00FF00'\n    }); // Right face\n    if (x === -1) expectedBorderColors.push({\n      faceIndex: 3,\n      color: 'Red',\n      hex: '#DC143C'\n    }); // Left face\n    if (y === 1) expectedBorderColors.push({\n      faceIndex: 4,\n      color: 'Blue',\n      hex: '#0000FF'\n    }); // Top face\n    if (y === -1) expectedBorderColors.push({\n      faceIndex: 5,\n      color: 'Yellow',\n      hex: '#FFD700'\n    }); // Bottom face\n    if (z === 1) expectedBorderColors.push({\n      faceIndex: 0,\n      color: 'White',\n      hex: '#FFFFFF'\n    }); // Front face\n    if (z === -1) expectedBorderColors.push({\n      faceIndex: 1,\n      color: 'Orange',\n      hex: '#FF8C00'\n    }); // Back face\n\n    const result = {\n      type: 'piece',\n      pieceId,\n      shapeType,\n      shapeColor,\n      expectedBorderColors,\n      isInCorrectPosition,\n      currentPosition: piece.position,\n      expectedPosition,\n      colors: piece.colors,\n      rotationHistory: piece.rotationHistory,\n      count: isInCorrectPosition ? 0 : 1\n    };\n    setIdentificationResults(prev => ({\n      ...prev,\n      [`piece-${pieceId}`]: result\n    }));\n    logToTerminal(`🎯 IDENTIFIED PIECE ${pieceId}: ${shapeColor} ${shapeType}`, result);\n    if (onIdentification) {\n      onIdentification(result);\n    }\n    return result;\n  };\n  const handleButtonClick = pieceId => {\n    if (isScrambling) return;\n    setActiveIdentification(`piece-${pieceId}`);\n    const result = identifyIncorrectPiece(pieceId);\n\n    // Reset active state after a short delay\n    setTimeout(() => {\n      setActiveIdentification(null);\n    }, 2000);\n  };\n  const getButtonState = pieceId => {\n    const key = `piece-${pieceId}`;\n    const result = identificationResults[key];\n    const isActive = activeIdentification === key;\n    return {\n      isActive,\n      hasIncorrect: result && !result.isInCorrectPosition,\n      isCorrect: result && result.isInCorrectPosition\n    };\n  };\n  if (!cubeState || pieces.length === 0) {\n    return /*#__PURE__*/_jsxDEV(IdentifyContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Identify Incorrect Shapes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatusMessage, {\n        $type: \"warning\",\n        children: \"Loading cube state... Please scramble the cube first to identify incorrect shapes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(IdentifyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Identify Incorrect Shapes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {\n      children: \"Click any button below to identify if that specific piece (shape+color+border combination) is in the correct position. Red buttons indicate incorrect pieces, green indicates correct pieces.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'white',\n          marginBottom: '15px',\n          fontSize: '16px'\n        },\n        children: \"Individual Pieces (Shape + Color + Border)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGrid, {\n        style: {\n          gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))'\n        },\n        children: Array.from({\n          length: 26\n        }, (_, pieceId) => {\n          const piece = pieces[pieceId];\n          if (!piece) return null;\n          const state = getButtonState(pieceId);\n          const shapeType = getShapeType(pieceId);\n          const shapeColor = getShapeColor(pieceId);\n          const isInCorrectPosition = isPieceInCorrectPosition(piece, pieceId);\n          return /*#__PURE__*/_jsxDEV(IdentifyButton, {\n            onClick: () => handleButtonClick(pieceId),\n            disabled: isScrambling,\n            $isActive: state.isActive,\n            $hasIncorrect: !isInCorrectPosition,\n            style: {\n              background: state.isActive ? 'rgba(76, 175, 80, 0.3)' : !isInCorrectPosition ? 'rgba(255, 71, 87, 0.2)' : 'rgba(76, 175, 80, 0.2)',\n              borderColor: !isInCorrectPosition ? '#ff4757' : '#4CAF50'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonContent, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonTitle, {\n                children: [\"#\", pieceId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonSubtitle, {\n                children: [shapeColor, \" \", shapeType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  marginTop: '4px',\n                  opacity: 0.8\n                },\n                children: isInCorrectPosition ? '✓ Correct' : '✗ Incorrect'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)\n          }, `piece-${pieceId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), activeIdentification && /*#__PURE__*/_jsxDEV(StatusMessage, {\n      $type: \"success\",\n      children: \"Piece identification complete! Check the terminal for detailed results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(IdentifyIncorrectShapes, \"ii/H1hjjocRwhM9agB/LU82OhuE=\");\n_c0 = IdentifyIncorrectShapes;\nexport default IdentifyIncorrectShapes;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"IdentifyContainer\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"ButtonGrid\");\n$RefreshReg$(_c4, \"IdentifyButton\");\n$RefreshReg$(_c5, \"ButtonContent\");\n$RefreshReg$(_c6, \"ButtonTitle\");\n$RefreshReg$(_c7, \"ButtonSubtitle\");\n$RefreshReg$(_c8, \"Instructions\");\n$RefreshReg$(_c9, \"StatusMessage\");\n$RefreshReg$(_c0, \"IdentifyIncorrectShapes\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","IdentifyContainer","div","_c","SectionTitle","h3","_c2","ButtonGrid","_c3","IdentifyButton","button","props","$isActive","$hasIncorrect","disabled","_c4","ButtonContent","_c5","ButtonTitle","span","_c6","ButtonSubtitle","_c7","CountBadge","Instructions","p","_c8","StatusMessage","$type","_c9","logToTerminal","message","data","console","log","JSON","stringify","repeat","fetch","method","headers","body","then","response","ok","Error","status","catch","error","IdentifyIncorrectShapes","isScrambling","cubeState","onIdentification","_s","activeIdentification","setActiveIdentification","identificationResults","setIdentificationResults","getShapeType","pieceId","shapeTypes","getShapeColor","shapeColors","getExpectedPosition","positions","x","y","z","push","isPieceInCorrectPosition","piece","position","expectedPosition","getExpectedBorderColor","faceIndex","borderColors","getBorderColorName","colorNames","getPieces","Array","isArray","map","index","colors","rotationHistory","pieces","identifyIncorrectPiece","find","isInCorrectPosition","shapeType","shapeColor","expectedBorderColors","color","hex","result","type","currentPosition","count","prev","handleButtonClick","setTimeout","getButtonState","key","isActive","hasIncorrect","isCorrect","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","fontSize","gridTemplateColumns","from","_","state","onClick","background","borderColor","marginTop","opacity","_c0","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/components/IdentifyIncorrectShapes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst IdentifyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  color: white;\r\n  text-align: center;\r\n  margin: 0 0 15px 0;\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst ButtonGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst IdentifyButton = styled.button`\r\n  padding: 12px 16px;\r\n  border: 2px solid ${props => {\r\n    if (props.$isActive) return '#4CAF50';\r\n    if (props.$hasIncorrect) return '#ff4757';\r\n    return 'rgba(255, 255, 255, 0.3)';\r\n  }};\r\n  border-radius: 10px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  transition: all 0.3s ease;\r\n  background: ${props => {\r\n    if (props.disabled) return 'rgba(100, 100, 100, 0.3)';\r\n    if (props.$isActive) return 'rgba(76, 175, 80, 0.2)';\r\n    if (props.$hasIncorrect) return 'rgba(255, 71, 87, 0.2)';\r\n    return 'rgba(255, 255, 255, 0.1)';\r\n  }};\r\n  color: ${props => {\r\n    if (props.disabled) return '#666';\r\n    if (props.$isActive) return '#4CAF50';\r\n    if (props.$hasIncorrect) return '#ff4757';\r\n    return 'white';\r\n  }};\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n  \r\n  &:hover {\r\n    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\r\n    box-shadow: ${props => props.disabled ? 'none' : '0 4px 12px rgba(0, 0, 0, 0.3)'};\r\n    background: ${props => {\r\n      if (props.disabled) return 'rgba(100, 100, 100, 0.3)';\r\n      if (props.$isActive) return 'rgba(76, 175, 80, 0.3)';\r\n      if (props.$hasIncorrect) return 'rgba(255, 71, 87, 0.3)';\r\n      return 'rgba(255, 255, 255, 0.2)';\r\n    }};\r\n  }\r\n  \r\n  &:active {\r\n    transform: ${props => props.disabled ? 'none' : 'translateY(0)'};\r\n  }\r\n`;\r\n\r\nconst ButtonContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 4px;\r\n`;\r\n\r\nconst ButtonTitle = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ButtonSubtitle = styled.span`\r\n  font-size: 11px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst CountBadge = styled.span`\r\n  background: ${props => props.$hasIncorrect ? '#ff4757' : '#4CAF50'};\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst Instructions = styled.p`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 13px;\r\n  text-align: center;\r\n  margin: 0 0 15px 0;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst StatusMessage = styled.div`\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background: ${props => {\r\n    if (props.$type === 'success') return 'rgba(76, 175, 80, 0.2)';\r\n    if (props.$type === 'warning') return 'rgba(255, 193, 7, 0.2)';\r\n    if (props.$type === 'error') return 'rgba(244, 67, 54, 0.2)';\r\n    return 'rgba(33, 150, 243, 0.2)';\r\n  }};\r\n  color: ${props => {\r\n    if (props.$type === 'success') return '#4CAF50';\r\n    if (props.$type === 'warning') return '#FFC107';\r\n    if (props.$type === 'error') return '#f44336';\r\n    return '#2196F3';\r\n  }};\r\n  border: 1px solid ${props => {\r\n    if (props.$type === 'success') return 'rgba(76, 175, 80, 0.3)';\r\n    if (props.$type === 'warning') return 'rgba(255, 193, 7, 0.3)';\r\n    if (props.$type === 'error') return 'rgba(244, 67, 54, 0.3)';\r\n    return 'rgba(33, 150, 243, 0.3)';\r\n  }};\r\n`;\r\n\r\n// Custom logging function\r\nconst logToTerminal = (message, data = null) => {\r\n  console.log(`\\n🎯 ${message}`);\r\n  if (data) {\r\n    console.log(JSON.stringify(data, null, 2));\r\n  }\r\n  console.log('='.repeat(80) + '\\n');\r\n  \r\n  // Send to log server\r\n  fetch('http://localhost:3001/log', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      message: message,\r\n      data: data\r\n    })\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    console.log('✅ Log sent to terminal successfully');\r\n  })\r\n  .catch(error => {\r\n    console.error('❌ Could not send log to terminal server:', error);\r\n  });\r\n};\r\n\r\nfunction IdentifyIncorrectShapes({ isScrambling, cubeState, onIdentification }) {\r\n  const [activeIdentification, setActiveIdentification] = useState(null);\r\n  const [identificationResults, setIdentificationResults] = useState({});\r\n\r\n  // Helper functions\r\n  const getShapeType = (pieceId) => {\r\n    const shapeTypes = [\r\n      'Square', 'Square', 'Square', 'Square', 'Square',\r\n      'Circle', 'Circle', 'Circle', 'Circle', 'Circle',\r\n      'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond',\r\n      'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond',\r\n      'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'\r\n    ];\r\n    return shapeTypes[pieceId] || 'Unknown';\r\n  };\r\n\r\n  const getShapeColor = (pieceId) => {\r\n    const shapeColors = [\r\n      'Red', 'Blue', 'Green', 'Orange', 'Purple',\r\n      'Red', 'Blue', 'Green', 'Orange', 'Yellow',\r\n      'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple',\r\n      'Red', 'Blue', 'Green', 'Orange', 'Purple',\r\n      'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'\r\n    ];\r\n    return shapeColors[pieceId] || 'Unknown';\r\n  };\r\n\r\n  const getExpectedPosition = (pieceId) => {\r\n    const positions = [];\r\n    for (let x = -1; x <= 1; x++) {\r\n      for (let y = -1; y <= 1; y++) {\r\n        for (let z = -1; z <= 1; z++) {\r\n          if (x === 0 && y === 0 && z === 0) continue;\r\n          positions.push([x, y, z]);\r\n        }\r\n      }\r\n    }\r\n    return positions[pieceId];\r\n  };\r\n\r\n  const isPieceInCorrectPosition = (piece, pieceId) => {\r\n    if (!piece || !piece.position) return false;\r\n    const expectedPosition = getExpectedPosition(pieceId);\r\n    return JSON.stringify(piece.position) === JSON.stringify(expectedPosition);\r\n  };\r\n\r\n  const getExpectedBorderColor = (faceIndex) => {\r\n    const borderColors = [\r\n      '#FFFFFF', // Face 0 (front) - White\r\n      '#FF8C00', // Face 1 (back) - Orange  \r\n      '#00FF00', // Face 2 (right) - Green\r\n      '#DC143C', // Face 3 (left) - Red\r\n      '#0000FF', // Face 4 (top) - Blue\r\n      '#FFD700'  // Face 5 (bottom) - Yellow\r\n    ];\r\n    return borderColors[faceIndex] || '#000000';\r\n  };\r\n\r\n  const getBorderColorName = (faceIndex) => {\r\n    const colorNames = ['White', 'Orange', 'Green', 'Red', 'Blue', 'Yellow'];\r\n    return colorNames[faceIndex] || 'Unknown';\r\n  };\r\n\r\n  // Get pieces data\r\n  const getPieces = () => {\r\n    if (Array.isArray(cubeState)) {\r\n      return cubeState.map((piece, index) => ({\r\n        pieceId: index,\r\n        position: piece.position,\r\n        colors: piece.colors,\r\n        rotationHistory: piece.rotationHistory || []\r\n      }));\r\n    } else if (cubeState?.pieces) {\r\n      return cubeState.pieces;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const pieces = getPieces();\r\n\r\n  // Identify incorrect specific piece (shape+color+border combination)\r\n  const identifyIncorrectPiece = (pieceId) => {\r\n    const piece = pieces.find(p => p.pieceId === pieceId);\r\n    if (!piece) return null;\r\n\r\n    const isInCorrectPosition = isPieceInCorrectPosition(piece, pieceId);\r\n    const shapeType = getShapeType(pieceId);\r\n    const shapeColor = getShapeColor(pieceId);\r\n    const expectedPosition = getExpectedPosition(pieceId);\r\n\r\n    // Get the expected border colors for this piece's current position\r\n    const [x, y, z] = piece.position;\r\n    const expectedBorderColors = [];\r\n    \r\n    if (x === 1) expectedBorderColors.push({ faceIndex: 2, color: 'Green', hex: '#00FF00' }); // Right face\r\n    if (x === -1) expectedBorderColors.push({ faceIndex: 3, color: 'Red', hex: '#DC143C' }); // Left face\r\n    if (y === 1) expectedBorderColors.push({ faceIndex: 4, color: 'Blue', hex: '#0000FF' }); // Top face\r\n    if (y === -1) expectedBorderColors.push({ faceIndex: 5, color: 'Yellow', hex: '#FFD700' }); // Bottom face\r\n    if (z === 1) expectedBorderColors.push({ faceIndex: 0, color: 'White', hex: '#FFFFFF' }); // Front face\r\n    if (z === -1) expectedBorderColors.push({ faceIndex: 1, color: 'Orange', hex: '#FF8C00' }); // Back face\r\n\r\n    const result = {\r\n      type: 'piece',\r\n      pieceId,\r\n      shapeType,\r\n      shapeColor,\r\n      expectedBorderColors,\r\n      isInCorrectPosition,\r\n      currentPosition: piece.position,\r\n      expectedPosition,\r\n      colors: piece.colors,\r\n      rotationHistory: piece.rotationHistory,\r\n      count: isInCorrectPosition ? 0 : 1\r\n    };\r\n\r\n    setIdentificationResults(prev => ({\r\n      ...prev,\r\n      [`piece-${pieceId}`]: result\r\n    }));\r\n\r\n    logToTerminal(`🎯 IDENTIFIED PIECE ${pieceId}: ${shapeColor} ${shapeType}`, result);\r\n    \r\n    if (onIdentification) {\r\n      onIdentification(result);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleButtonClick = (pieceId) => {\r\n    if (isScrambling) return;\r\n\r\n    setActiveIdentification(`piece-${pieceId}`);\r\n    const result = identifyIncorrectPiece(pieceId);\r\n\r\n    // Reset active state after a short delay\r\n    setTimeout(() => {\r\n      setActiveIdentification(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const getButtonState = (pieceId) => {\r\n    const key = `piece-${pieceId}`;\r\n    const result = identificationResults[key];\r\n    const isActive = activeIdentification === key;\r\n    \r\n    return {\r\n      isActive,\r\n      hasIncorrect: result && !result.isInCorrectPosition,\r\n      isCorrect: result && result.isInCorrectPosition\r\n    };\r\n  };\r\n\r\n  if (!cubeState || pieces.length === 0) {\r\n    return (\r\n      <IdentifyContainer>\r\n        <SectionTitle>Identify Incorrect Shapes</SectionTitle>\r\n        <StatusMessage $type=\"warning\">\r\n          Loading cube state... Please scramble the cube first to identify incorrect shapes.\r\n        </StatusMessage>\r\n      </IdentifyContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <IdentifyContainer>\r\n      <SectionTitle>Identify Incorrect Shapes</SectionTitle>\r\n      <Instructions>\r\n        Click any button below to identify if that specific piece (shape+color+border combination) is in the correct position.\r\n        Red buttons indicate incorrect pieces, green indicates correct pieces.\r\n      </Instructions>\r\n\r\n      {/* Individual Piece Identification */}\r\n      <div>\r\n        <h4 style={{ color: 'white', marginBottom: '15px', fontSize: '16px' }}>Individual Pieces (Shape + Color + Border)</h4>\r\n        <ButtonGrid style={{ gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))' }}>\r\n          {Array.from({ length: 26 }, (_, pieceId) => {\r\n            const piece = pieces[pieceId];\r\n            if (!piece) return null;\r\n\r\n            const state = getButtonState(pieceId);\r\n            const shapeType = getShapeType(pieceId);\r\n            const shapeColor = getShapeColor(pieceId);\r\n            const isInCorrectPosition = isPieceInCorrectPosition(piece, pieceId);\r\n\r\n            return (\r\n              <IdentifyButton\r\n                key={`piece-${pieceId}`}\r\n                onClick={() => handleButtonClick(pieceId)}\r\n                disabled={isScrambling}\r\n                $isActive={state.isActive}\r\n                $hasIncorrect={!isInCorrectPosition}\r\n                style={{\r\n                  background: state.isActive \r\n                    ? 'rgba(76, 175, 80, 0.3)' \r\n                    : !isInCorrectPosition \r\n                      ? 'rgba(255, 71, 87, 0.2)' \r\n                      : 'rgba(76, 175, 80, 0.2)',\r\n                  borderColor: !isInCorrectPosition ? '#ff4757' : '#4CAF50'\r\n                }}\r\n              >\r\n                <ButtonContent>\r\n                  <ButtonTitle>#{pieceId}</ButtonTitle>\r\n                  <ButtonSubtitle>{shapeColor} {shapeType}</ButtonSubtitle>\r\n                  <div style={{ fontSize: '10px', marginTop: '4px', opacity: 0.8 }}>\r\n                    {isInCorrectPosition ? '✓ Correct' : '✗ Incorrect'}\r\n                  </div>\r\n                </ButtonContent>\r\n              </IdentifyButton>\r\n            );\r\n          })}\r\n        </ButtonGrid>\r\n      </div>\r\n\r\n      {/* Status Message */}\r\n      {activeIdentification && (\r\n        <StatusMessage $type=\"success\">\r\n          Piece identification complete! Check the terminal for detailed results.\r\n        </StatusMessage>\r\n      )}\r\n    </IdentifyContainer>\r\n  );\r\n}\r\n\r\nexport default IdentifyIncorrectShapes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}