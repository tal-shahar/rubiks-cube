{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport RubiksCube from './components/RubiksCube';\nimport Controls from './components/Controls';\nimport InfoPanel from './components/InfoPanel';\nimport IdentifyIncorrectShapes from './components/IdentifyIncorrectShapes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = AppContainer;\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n`;\n_c4 = Subtitle;\nconst MainContent = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  max-width: 1200px;\n`;\n_c5 = MainContent;\nconst CubeContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n`;\n_c6 = CubeContainer;\nfunction App() {\n  _s();\n  const [isRotating, setIsRotating] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [currentScramble, setCurrentScramble] = useState('');\n  const [cubeState, setCubeState] = useState(null);\n  const scrambleRef = useRef();\n  const resetRef = useRef();\n  const handleScramble = () => {\n    if (scrambleRef.current) {\n      setIsScrambling(true);\n      setCurrentScramble('Generating scramble sequence...');\n      scrambleRef.current();\n\n      // Update scramble display after a delay\n      setTimeout(() => {\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\n        setTimeout(() => {\n          setIsScrambling(false);\n        }, 7000);\n      }, 1000);\n    }\n  };\n  const handleReset = () => {\n    if (resetRef.current) {\n      setCurrentScramble('');\n      resetRef.current();\n    }\n  };\n  const handleIdentification = identificationResult => {\n    // Log identification results to main development terminal\n    console.log('\\n' + 'üîç'.repeat(50));\n    console.log(`üéØ IDENTIFICATION RESULT IN MAIN TERMINAL!`);\n    console.log(`üìä Type: ${identificationResult.type}`);\n    if (identificationResult.type === 'piece') {\n      console.log(`üÜî Piece ID: ${identificationResult.pieceId}`);\n      console.log(`üé® Shape: ${identificationResult.shapeColor} ${identificationResult.shapeType}`);\n      console.log(`üìç Current Position: [${identificationResult.currentPosition.join(', ')}]`);\n      console.log(`üéØ Expected Position: [${identificationResult.expectedPosition.join(', ')}]`);\n      console.log(`‚úÖ Is Correct: ${identificationResult.isInCorrectPosition}`);\n      console.log(`üé≠ Expected Border Colors:`, identificationResult.expectedBorderColors);\n      console.log(`üìä Move History: ${identificationResult.rotationHistory.length} moves`);\n    } else if (identificationResult.type === 'combination') {\n      console.log(`üéØ Combination: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border`);\n      console.log(`üî¢ Count: ${identificationResult.count} incorrect pieces found`);\n      console.log(`üìã Incorrect Pieces:`, identificationResult.incorrectPieces);\n    } else if (identificationResult.type === 'blackFaces') {\n      console.log(`‚ö´ BLACK FACES IDENTIFIED: ${identificationResult.count} pieces with black faces found`);\n      console.log(`üìã Pieces with Black Faces:`, identificationResult.incorrectPieces.map(p => ({\n        pieceId: p.pieceId,\n        shape: `${p.shapeColor} ${p.shapeType}`,\n        position: `[${p.currentPosition.join(', ')}]`,\n        blackFaces: p.blackFaces,\n        visibleFaces: p.visibleFaces,\n        allColors: p.colors\n      })));\n    } else {\n      console.log(`üî¢ Count: ${identificationResult.count} incorrect pieces found`);\n      if (identificationResult.type === 'shape') {\n        console.log(`üî∑ Shape Type: ${identificationResult.shapeType}`);\n      } else if (identificationResult.type === 'color') {\n        console.log(`üé® Shape Color: ${identificationResult.shapeColor}`);\n      } else if (identificationResult.type === 'border') {\n        console.log(`üé≠ Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.log(`üéØ Face Index: ${identificationResult.faceIndex}`);\n      }\n      console.log(`üìã Incorrect Pieces:`, identificationResult.incorrectPieces);\n    }\n    console.log('üîç'.repeat(50) + '\\n');\n\n    // Force output to the React development server terminal\n    if (identificationResult.type === 'piece') {\n      console.error(`\\nüîç PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})`);\n      console.error(`üìç Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]`);\n      console.error(`‚úÖ Correct: ${identificationResult.isInCorrectPosition}`);\n    } else if (identificationResult.type === 'combination') {\n      console.error(`\\nüîç COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border - ${identificationResult.count} incorrect pieces`);\n      console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', '));\n    } else if (identificationResult.type === 'blackFaces') {\n      console.error(`\\n‚ö´ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with black faces found`);\n      console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}] - Black faces: ${p.blackFaces.join(', ')}`).join(', '));\n    } else {\n      if (identificationResult.type === 'border') {\n        console.error(`\\nüîç BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`üé≠ Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', '));\n      } else {\n        console.error(`\\nüîç IDENTIFICATION: ${identificationResult.type.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', '));\n      }\n    }\n\n    // Try to write directly to stdout\n    if (typeof process !== 'undefined' && process.stdout) {\n      if (identificationResult.type === 'piece') {\n        process.stdout.write(`\\nüîç PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})\\n`);\n        process.stdout.write(`Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]\\n`);\n        process.stdout.write(`Correct: ${identificationResult.isInCorrectPosition}\\n\\n`);\n      } else if (identificationResult.type === 'combination') {\n        process.stdout.write(`\\nüîç COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border\\n`);\n        process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n      } else {\n        if (identificationResult.type === 'border') {\n          process.stdout.write(`\\nüîç BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})\\n\\n`);\n        } else {\n          process.stdout.write(`\\nüîç IDENTIFICATION RESULT: ${identificationResult.type.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Rubik's Cube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Interactive 3D Cube with Three.js & React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(CubeContainer, {\n        children: /*#__PURE__*/_jsxDEV(RubiksCube, {\n          isRotating: isRotating,\n          autoRotate: autoRotate,\n          onScramble: scrambleFn => {\n            scrambleRef.current = scrambleFn;\n          },\n          onReset: resetFn => {\n            resetRef.current = resetFn;\n          },\n          onCubeStateChange: setCubeState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        isRotating: isRotating,\n        setIsRotating: setIsRotating,\n        autoRotate: autoRotate,\n        setAutoRotate: setAutoRotate,\n        onScramble: handleScramble,\n        onReset: handleReset,\n        cubeState: cubeState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {\n        currentScramble: currentScramble,\n        isScrambling: isScrambling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IdentifyIncorrectShapes, {\n        isScrambling: isScrambling,\n        cubeState: cubeState,\n        onIdentification: handleIdentification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bxwc5rI/BajPlTIhumnbF0UnXOY=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"MainContent\");\n$RefreshReg$(_c6, \"CubeContainer\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useRef","styled","RubiksCube","Controls","InfoPanel","IdentifyIncorrectShapes","jsxDEV","_jsxDEV","AppContainer","div","_c","Header","header","_c2","Title","h1","_c3","Subtitle","p","_c4","MainContent","main","_c5","CubeContainer","_c6","App","_s","isRotating","setIsRotating","autoRotate","setAutoRotate","isScrambling","setIsScrambling","currentScramble","setCurrentScramble","cubeState","setCubeState","scrambleRef","resetRef","handleScramble","current","setTimeout","handleReset","handleIdentification","identificationResult","console","log","repeat","type","pieceId","shapeColor","shapeType","currentPosition","join","expectedPosition","isInCorrectPosition","expectedBorderColors","rotationHistory","length","combination","borderColor","count","incorrectPieces","map","shape","position","blackFaces","visibleFaces","allColors","colors","borderColorName","borderColorHex","faceIndex","error","toUpperCase","process","stdout","write","children","fileName","_jsxFileName","lineNumber","columnNumber","onScramble","scrambleFn","onReset","resetFn","onCubeStateChange","onIdentification","_c7","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport RubiksCube from './components/RubiksCube';\nimport Controls from './components/Controls';\nimport InfoPanel from './components/InfoPanel';\nimport IdentifyIncorrectShapes from './components/IdentifyIncorrectShapes';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n`;\n\nconst MainContent = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst CubeContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n`;\n\nfunction App() {\n  const [isRotating, setIsRotating] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [currentScramble, setCurrentScramble] = useState('');\n  const [cubeState, setCubeState] = useState(null);\n  const scrambleRef = useRef();\n  const resetRef = useRef();\n\n  const handleScramble = () => {\n    if (scrambleRef.current) {\n      setIsScrambling(true);\n      setCurrentScramble('Generating scramble sequence...');\n      scrambleRef.current();\n      \n      // Update scramble display after a delay\n      setTimeout(() => {\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\n        setTimeout(() => {\n          setIsScrambling(false);\n        }, 7000);\n      }, 1000);\n    }\n  };\n\n  const handleReset = () => {\n    if (resetRef.current) {\n      setCurrentScramble('');\n      resetRef.current();\n    }\n  };\n\n\n  const handleIdentification = (identificationResult) => {\n    // Log identification results to main development terminal\n    console.log('\\n' + 'üîç'.repeat(50));\n    console.log(`üéØ IDENTIFICATION RESULT IN MAIN TERMINAL!`);\n    console.log(`üìä Type: ${identificationResult.type}`);\n    \n    if (identificationResult.type === 'piece') {\n      console.log(`üÜî Piece ID: ${identificationResult.pieceId}`);\n      console.log(`üé® Shape: ${identificationResult.shapeColor} ${identificationResult.shapeType}`);\n      console.log(`üìç Current Position: [${identificationResult.currentPosition.join(', ')}]`);\n      console.log(`üéØ Expected Position: [${identificationResult.expectedPosition.join(', ')}]`);\n      console.log(`‚úÖ Is Correct: ${identificationResult.isInCorrectPosition}`);\n      console.log(`üé≠ Expected Border Colors:`, identificationResult.expectedBorderColors);\n      console.log(`üìä Move History: ${identificationResult.rotationHistory.length} moves`);\n    } else if (identificationResult.type === 'combination') {\n      console.log(`üéØ Combination: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border`);\n      console.log(`üî¢ Count: ${identificationResult.count} incorrect pieces found`);\n      console.log(`üìã Incorrect Pieces:`, identificationResult.incorrectPieces);\n    } else if (identificationResult.type === 'blackFaces') {\n      console.log(`‚ö´ BLACK FACES IDENTIFIED: ${identificationResult.count} pieces with black faces found`);\n      console.log(`üìã Pieces with Black Faces:`, identificationResult.incorrectPieces.map(p => ({\n        pieceId: p.pieceId,\n        shape: `${p.shapeColor} ${p.shapeType}`,\n        position: `[${p.currentPosition.join(', ')}]`,\n        blackFaces: p.blackFaces,\n        visibleFaces: p.visibleFaces,\n        allColors: p.colors\n      })));\n    } else {\n      console.log(`üî¢ Count: ${identificationResult.count} incorrect pieces found`);\n      \n      if (identificationResult.type === 'shape') {\n        console.log(`üî∑ Shape Type: ${identificationResult.shapeType}`);\n      } else if (identificationResult.type === 'color') {\n        console.log(`üé® Shape Color: ${identificationResult.shapeColor}`);\n      } else if (identificationResult.type === 'border') {\n        console.log(`üé≠ Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.log(`üéØ Face Index: ${identificationResult.faceIndex}`);\n      }\n      \n      console.log(`üìã Incorrect Pieces:`, identificationResult.incorrectPieces);\n    }\n    \n    console.log('üîç'.repeat(50) + '\\n');\n    \n    // Force output to the React development server terminal\n    if (identificationResult.type === 'piece') {\n      console.error(`\\nüîç PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})`);\n      console.error(`üìç Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]`);\n      console.error(`‚úÖ Correct: ${identificationResult.isInCorrectPosition}`);\n    } else if (identificationResult.type === 'combination') {\n      console.error(`\\nüîç COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border - ${identificationResult.count} incorrect pieces`);\n      console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => \n        `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n      ).join(', '));\n    } else if (identificationResult.type === 'blackFaces') {\n      console.error(`\\n‚ö´ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with black faces found`);\n      console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => \n        `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}] - Black faces: ${p.blackFaces.join(', ')}`\n      ).join(', '));\n    } else {\n      if (identificationResult.type === 'border') {\n        console.error(`\\nüîç BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`üé≠ Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => \n          `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n        ).join(', '));\n      } else {\n        console.error(`\\nüîç IDENTIFICATION: ${identificationResult.type.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`üìã Details:`, identificationResult.incorrectPieces.map(p => \n          `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n        ).join(', '));\n      }\n    }\n    \n    // Try to write directly to stdout\n    if (typeof process !== 'undefined' && process.stdout) {\n      if (identificationResult.type === 'piece') {\n        process.stdout.write(`\\nüîç PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})\\n`);\n        process.stdout.write(`Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]\\n`);\n        process.stdout.write(`Correct: ${identificationResult.isInCorrectPosition}\\n\\n`);\n      } else if (identificationResult.type === 'combination') {\n        process.stdout.write(`\\nüîç COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border\\n`);\n        process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n      } else {\n        if (identificationResult.type === 'border') {\n          process.stdout.write(`\\nüîç BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})\\n\\n`);\n        } else {\n          process.stdout.write(`\\nüîç IDENTIFICATION RESULT: ${identificationResult.type.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n        }\n      }\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Header>\n        <Title>Rubik's Cube</Title>\n        <Subtitle>Interactive 3D Cube with Three.js & React</Subtitle>\n      </Header>\n      \n      <MainContent>\n        <CubeContainer>\n          <RubiksCube \n            isRotating={isRotating}\n            autoRotate={autoRotate}\n            onScramble={(scrambleFn) => { scrambleRef.current = scrambleFn; }}\n            onReset={(resetFn) => { resetRef.current = resetFn; }}\n            onCubeStateChange={setCubeState}\n          />\n        </CubeContainer>\n        \n        <Controls \n          isRotating={isRotating}\n          setIsRotating={setIsRotating}\n          autoRotate={autoRotate}\n          setAutoRotate={setAutoRotate}\n          onScramble={handleScramble}\n          onReset={handleReset}\n          cubeState={cubeState}\n        />\n        \n        <InfoPanel \n          currentScramble={currentScramble}\n          isScrambling={isScrambling}\n        />\n        \n        <IdentifyIncorrectShapes\n          isScrambling={isScrambling}\n          cubeState={cubeState}\n          onIdentification={handleIdentification}\n        />\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}