{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\components\\\\Controls.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n`;\n_c = ControlsContainer;\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'rgba(255, 255, 255, 0.2)'};\n  color: ${props => props.$active ? 'white' : '#333'};\n  border: 2px solid ${props => props.$active ? 'transparent' : 'rgba(255, 255, 255, 0.3)'};\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    background: ${props => props.$active ? 'linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%)' : 'rgba(255, 255, 255, 0.3)'};\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\nconst ToggleButton = styled(Button)`\n  min-width: 120px;\n`;\n_c2 = ToggleButton;\nconst ActionButton = styled(Button)`\n  min-width: 100px;\n  background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n  color: white;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  \n  &:hover {\n    background: ${props => props.disabled ? 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)' : 'linear-gradient(135deg, #ff5252 0%, #e74c3c 100%)'};\n    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n  }\n`;\n_c3 = ActionButton;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c4 = ButtonGroup;\nconst FaceButton = styled(Button)`\n  min-width: 60px;\n  padding: 8px 12px;\n  font-size: 12px;\n  background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #45a049 0%, #3d8b40 100%);\n  }\n`;\nconst FaceButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 8px;\n  max-width: 200px;\n  margin: 0 auto;\n`;\nconst Label = styled.span`\n  color: white;\n  font-weight: 600;\n  margin-right: 10px;\n`;\n_c5 = Label;\nfunction Controls({\n  isRotating,\n  setIsRotating,\n  autoRotate,\n  setAutoRotate,\n  onScramble,\n  onReset,\n  onSolve,\n  onRotateFace,\n  cubeState\n}) {\n  _s();\n  const [isAnimating, setIsAnimating] = useState(false);\n  const handleReset = () => {\n    if (isAnimating || !onReset) return;\n    setIsAnimating(true);\n    console.log('Reset cube');\n    onReset();\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 1000);\n  };\n  const handleScramble = () => {\n    if (isAnimating || !onScramble) return;\n    setIsAnimating(true);\n    console.log('Scramble cube');\n    onScramble();\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 8000); // Longer delay for scramble\n  };\n  const handleSolve = () => {\n    if (isAnimating || !onSolve) return;\n    setIsAnimating(true);\n    console.log('Solve cube');\n    onSolve(); // Use the animated solve function\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 10000); // Longer delay for solve animation\n  };\n  const handleFaceRotation = (face, direction) => {\n    if (isAnimating || !onRotateFace) return;\n    console.log(`Manual rotation: ${face} ${direction}`);\n    onRotateFace(face, direction);\n  };\n  const handlePrintPosition = () => {\n    if (!cubeState) return;\n\n    // Handle both old format (array) and new format (enhanced object)\n    let pieces;\n    if (Array.isArray(cubeState)) {\n      // Old format - cubeState is an array\n      pieces = cubeState.map((piece, index) => ({\n        pieceId: index,\n        position: piece.position,\n        colors: piece.colors,\n        rotationHistory: piece.rotationHistory || [],\n        shapeType: getShapeType(index),\n        shapeColor: getShapeColor(index)\n      }));\n    } else {\n      // New format - cubeState is an enhanced object\n      pieces = cubeState.pieces || [];\n    }\n\n    // Create a clean JSON structure with piece information\n    const cubeData = {\n      timestamp: new Date().toISOString(),\n      totalPieces: pieces.length,\n      pieces: pieces\n    };\n\n    // Log to browser console\n    console.log('🎯 CURRENT CUBE POSITION (Manual Print):');\n    console.log(JSON.stringify(cubeData, null, 2));\n    console.log('='.repeat(80));\n\n    // Send to log server to print in terminal\n    fetch('http://localhost:3001/log', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: 'CURRENT CUBE POSITION (Manual Print)',\n        data: cubeData\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log('✅ Log sent to terminal successfully');\n      // Also try to trigger a visual indicator\n      alert('✅ Cube position printed to terminal! Check the terminal where npm run dev is running.');\n    }).catch(error => {\n      console.error('❌ Could not send log to terminal server:', error);\n      console.log('💡 Make sure the log server is running with: npm run log-server');\n      alert('❌ Could not send log to terminal. Check browser console for details.');\n    });\n    console.log('Cube position printed to terminal');\n  };\n  const handleDownload = () => {\n    if (!cubeState) return;\n\n    // Handle both old format (array) and new format (enhanced object)\n    let pieces;\n    if (Array.isArray(cubeState)) {\n      // Old format - cubeState is an array\n      pieces = cubeState.map((piece, index) => ({\n        pieceId: index,\n        position: piece.position,\n        colors: piece.colors,\n        rotationHistory: piece.rotationHistory || [],\n        shapeType: getShapeType(index),\n        shapeColor: getShapeColor(index)\n      }));\n    } else {\n      // New format - cubeState is an enhanced object\n      pieces = cubeState.pieces || [];\n    }\n\n    // Create a clean JSON structure with piece information\n    const cubeData = {\n      timestamp: new Date().toISOString(),\n      totalPieces: pieces.length,\n      pieces: pieces\n    };\n\n    // Create and download the JSON file\n    const dataStr = JSON.stringify(cubeData, null, 2);\n    const dataBlob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `rubiks-cube-state-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    console.log('Cube state downloaded:', cubeData);\n  };\n\n  // Helper functions for shape information\n  const getShapeType = pieceId => {\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\n    return shapeTypes[pieceId] || 'Unknown';\n  };\n  const getShapeColor = pieceId => {\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\n    return shapeColors[pieceId] || 'Unknown';\n  };\n  return /*#__PURE__*/_jsxDEV(ControlsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Auto Rotate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        $active: autoRotate,\n        onClick: () => setAutoRotate(!autoRotate),\n        children: autoRotate ? 'ON' : 'OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Manual Rotate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        $active: isRotating,\n        onClick: () => setIsRotating(!isRotating),\n        children: isRotating ? 'ON' : 'OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleReset,\n        disabled: isAnimating,\n        children: isAnimating ? 'Resetting...' : 'Reset'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleScramble,\n        disabled: isAnimating,\n        children: isAnimating ? 'Scrambling...' : 'Scramble'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleSolve,\n        disabled: isAnimating,\n        children: isAnimating ? 'Solving...' : 'Solve'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handlePrintPosition,\n        disabled: !cubeState,\n        style: {\n          background: 'linear-gradient(135deg, #2196F3 0%, #1976D2 100%)'\n        },\n        children: \"Print Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleDownload,\n        disabled: !cubeState,\n        style: {\n          background: 'linear-gradient(135deg, #4CAF50 0%, #45a049 100%)'\n        },\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(Controls, \"fVzM11GJBSX9GuOWSLFqeCknr64=\");\n_c6 = Controls;\nexport default Controls;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ControlsContainer\");\n$RefreshReg$(_c2, \"ToggleButton\");\n$RefreshReg$(_c3, \"ActionButton\");\n$RefreshReg$(_c4, \"ButtonGroup\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Controls\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ControlsContainer","div","_c","Button","button","props","$active","ToggleButton","_c2","ActionButton","disabled","_c3","ButtonGroup","_c4","FaceButton","FaceButtonGroup","Label","span","_c5","Controls","isRotating","setIsRotating","autoRotate","setAutoRotate","onScramble","onReset","onSolve","onRotateFace","cubeState","_s","isAnimating","setIsAnimating","handleReset","console","log","setTimeout","handleScramble","handleSolve","handleFaceRotation","face","direction","handlePrintPosition","pieces","Array","isArray","map","piece","index","pieceId","position","colors","rotationHistory","shapeType","getShapeType","shapeColor","getShapeColor","cubeData","timestamp","Date","toISOString","totalPieces","length","JSON","stringify","repeat","fetch","method","headers","body","message","data","then","response","ok","Error","status","alert","catch","error","handleDownload","dataStr","dataBlob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","slice","replace","appendChild","click","removeChild","revokeObjectURL","shapeTypes","shapeColors","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","background","_c6","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/components/Controls.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: ${props => props.$active \n    ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' \n    : 'rgba(255, 255, 255, 0.2)'};\n  color: ${props => props.$active ? 'white' : '#333'};\n  border: 2px solid ${props => props.$active ? 'transparent' : 'rgba(255, 255, 255, 0.3)'};\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    background: ${props => props.$active \n      ? 'linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%)' \n      : 'rgba(255, 255, 255, 0.3)'};\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst ToggleButton = styled(Button)`\n  min-width: 120px;\n`;\n\nconst ActionButton = styled(Button)`\n  min-width: 100px;\n  background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n  color: white;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  \n  &:hover {\n    background: ${props => props.disabled \n      ? 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)' \n      : 'linear-gradient(135deg, #ff5252 0%, #e74c3c 100%)'};\n    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst FaceButton = styled(Button)`\n  min-width: 60px;\n  padding: 8px 12px;\n  font-size: 12px;\n  background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);\n  color: white;\n  \n  &:hover {\n    background: linear-gradient(135deg, #45a049 0%, #3d8b40 100%);\n  }\n`;\n\nconst FaceButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 8px;\n  max-width: 200px;\n  margin: 0 auto;\n`;\n\nconst Label = styled.span`\n  color: white;\n  font-weight: 600;\n  margin-right: 10px;\n`;\n\nfunction Controls({ \n  isRotating, \n  setIsRotating, \n  autoRotate, \n  setAutoRotate,\n  onScramble,\n  onReset,\n  onSolve,\n  onRotateFace,\n  cubeState\n}) {\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  const handleReset = () => {\n    if (isAnimating || !onReset) return;\n    setIsAnimating(true);\n    console.log('Reset cube');\n    onReset();\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 1000);\n  };\n\n  const handleScramble = () => {\n    if (isAnimating || !onScramble) return;\n    setIsAnimating(true);\n    console.log('Scramble cube');\n    onScramble();\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 8000); // Longer delay for scramble\n  };\n\n  const handleSolve = () => {\n    if (isAnimating || !onSolve) return;\n    setIsAnimating(true);\n    console.log('Solve cube');\n    onSolve(); // Use the animated solve function\n    // Simulate animation delay\n    setTimeout(() => setIsAnimating(false), 10000); // Longer delay for solve animation\n  };\n\n  const handleFaceRotation = (face, direction) => {\n    if (isAnimating || !onRotateFace) return;\n    console.log(`Manual rotation: ${face} ${direction}`);\n    onRotateFace(face, direction);\n  };\n\n  const handlePrintPosition = () => {\n    if (!cubeState) return;\n    \n    // Handle both old format (array) and new format (enhanced object)\n    let pieces;\n    if (Array.isArray(cubeState)) {\n      // Old format - cubeState is an array\n      pieces = cubeState.map((piece, index) => ({\n        pieceId: index,\n        position: piece.position,\n        colors: piece.colors,\n        rotationHistory: piece.rotationHistory || [],\n        shapeType: getShapeType(index),\n        shapeColor: getShapeColor(index)\n      }));\n    } else {\n      // New format - cubeState is an enhanced object\n      pieces = cubeState.pieces || [];\n    }\n    \n    // Create a clean JSON structure with piece information\n    const cubeData = {\n      timestamp: new Date().toISOString(),\n      totalPieces: pieces.length,\n      pieces: pieces\n    };\n    \n    // Log to browser console\n    console.log('🎯 CURRENT CUBE POSITION (Manual Print):');\n    console.log(JSON.stringify(cubeData, null, 2));\n    console.log('='.repeat(80));\n    \n    // Send to log server to print in terminal\n    fetch('http://localhost:3001/log', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message: 'CURRENT CUBE POSITION (Manual Print)',\n        data: cubeData\n      })\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log('✅ Log sent to terminal successfully');\n      // Also try to trigger a visual indicator\n      alert('✅ Cube position printed to terminal! Check the terminal where npm run dev is running.');\n    })\n    .catch(error => {\n      console.error('❌ Could not send log to terminal server:', error);\n      console.log('💡 Make sure the log server is running with: npm run log-server');\n      alert('❌ Could not send log to terminal. Check browser console for details.');\n    });\n    \n    console.log('Cube position printed to terminal');\n  };\n\n  const handleDownload = () => {\n    if (!cubeState) return;\n    \n    // Handle both old format (array) and new format (enhanced object)\n    let pieces;\n    if (Array.isArray(cubeState)) {\n      // Old format - cubeState is an array\n      pieces = cubeState.map((piece, index) => ({\n        pieceId: index,\n        position: piece.position,\n        colors: piece.colors,\n        rotationHistory: piece.rotationHistory || [],\n        shapeType: getShapeType(index),\n        shapeColor: getShapeColor(index)\n      }));\n    } else {\n      // New format - cubeState is an enhanced object\n      pieces = cubeState.pieces || [];\n    }\n    \n    // Create a clean JSON structure with piece information\n    const cubeData = {\n      timestamp: new Date().toISOString(),\n      totalPieces: pieces.length,\n      pieces: pieces\n    };\n    \n    // Create and download the JSON file\n    const dataStr = JSON.stringify(cubeData, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `rubiks-cube-state-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    \n    console.log('Cube state downloaded:', cubeData);\n  };\n\n  // Helper functions for shape information\n  const getShapeType = (pieceId) => {\n    const shapeTypes = ['Square', 'Square', 'Square', 'Square', 'Square', 'Circle', 'Circle', 'Circle', 'Circle', 'Circle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Diamond', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle', 'Triangle'];\n    return shapeTypes[pieceId] || 'Unknown';\n  };\n\n  const getShapeColor = (pieceId) => {\n    const shapeColors = ['Red', 'Blue', 'Green', 'Orange', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Yellow', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Red', 'Blue', 'Green', 'Orange', 'Purple', 'Cyan', 'Magenta', 'Lime', 'Pink', 'Purple', 'Yellow'];\n    return shapeColors[pieceId] || 'Unknown';\n  };\n\n  return (\n    <ControlsContainer>\n      <ButtonGroup>\n        <Label>Auto Rotate:</Label>\n        <ToggleButton\n          $active={autoRotate}\n          onClick={() => setAutoRotate(!autoRotate)}\n        >\n          {autoRotate ? 'ON' : 'OFF'}\n        </ToggleButton>\n      </ButtonGroup>\n\n      <ButtonGroup>\n        <Label>Manual Rotate:</Label>\n        <ToggleButton\n          $active={isRotating}\n          onClick={() => setIsRotating(!isRotating)}\n        >\n          {isRotating ? 'ON' : 'OFF'}\n        </ToggleButton>\n      </ButtonGroup>\n\n      <ButtonGroup>\n        <ActionButton \n          onClick={handleReset}\n          disabled={isAnimating}\n        >\n          {isAnimating ? 'Resetting...' : 'Reset'}\n        </ActionButton>\n        <ActionButton \n          onClick={handleScramble}\n          disabled={isAnimating}\n        >\n          {isAnimating ? 'Scrambling...' : 'Scramble'}\n        </ActionButton>\n        <ActionButton \n          onClick={handleSolve}\n          disabled={isAnimating}\n        >\n          {isAnimating ? 'Solving...' : 'Solve'}\n        </ActionButton>\n        <ActionButton \n          onClick={handlePrintPosition}\n          disabled={!cubeState}\n          style={{ background: 'linear-gradient(135deg, #2196F3 0%, #1976D2 100%)' }}\n        >\n          Print Position\n        </ActionButton>\n        <ActionButton \n          onClick={handleDownload}\n          disabled={!cubeState}\n          style={{ background: 'linear-gradient(135deg, #4CAF50 0%, #45a049 100%)' }}\n        >\n          Download JSON\n        </ActionButton>\n      </ButtonGroup>\n    </ControlsContainer>\n  );\n}\n\nexport default Controls; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}