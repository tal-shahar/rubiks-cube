{"ast":null,"code":"import _objectWithoutProperties from \"C:/Repo/GitHub/rubiks-cube/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"compute\", \"width\", \"height\", \"samples\", \"renderPriority\", \"eventPriority\", \"frames\", \"stencilBuffer\", \"depthBuffer\", \"generateMipmaps\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\nconst RenderTexture = /* @__PURE__ */React.forwardRef((_ref, forwardRef) => {\n  let {\n      children,\n      compute,\n      width,\n      height,\n      samples = 8,\n      renderPriority = 0,\n      eventPriority = 0,\n      frames = Infinity,\n      stencilBuffer = false,\n      depthBuffer = true,\n      generateMipmaps = false\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n    if (!parent) return false;\n    // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState());\n    // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false;\n    // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container(_ref2) {\n  let {\n    frames,\n    renderPriority,\n    children,\n    fbo\n  } = _ref2;\n  let count = 0;\n  let oldAutoClear;\n  let oldXrEnabled;\n  let oldRenderTarget;\n  let oldIsPresenting;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      oldAutoClear = state.gl.autoClear;\n      oldXrEnabled = state.gl.xr.enabled;\n      oldRenderTarget = state.gl.getRenderTarget();\n      oldIsPresenting = state.gl.xr.isPresenting;\n      state.gl.autoClear = true;\n      state.gl.xr.enabled = false;\n      state.gl.xr.isPresenting = false;\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(oldRenderTarget);\n      state.gl.autoClear = oldAutoClear;\n      state.gl.xr.enabled = oldXrEnabled;\n      state.gl.xr.isPresenting = oldIsPresenting;\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nexport { RenderTexture };","map":{"version":3,"names":["_extends","THREE","React","useThree","createPortal","useFrame","useFBO","RenderTexture","forwardRef","_ref","children","compute","width","height","samples","renderPriority","eventPriority","frames","Infinity","stencilBuffer","depthBuffer","generateMipmaps","props","_objectWithoutProperties","_excluded","size","viewport","fbo","dpr","vScene","useState","Scene","uvCompute","useCallback","event","state","previous","_fbo$texture","_previous$previousRoo","parent","texture","__r3f","Object3D","raycaster","camera","events","previousRoot","getState","intersection","intersectObject","uv","setFromCamera","pointer","set","x","y","useImperativeHandle","createElement","Fragment","Container","onPointerOver","priority","object","_ref2","count","oldAutoClear","oldXrEnabled","oldRenderTarget","oldIsPresenting","gl","autoClear","xr","enabled","getRenderTarget","isPresenting","setRenderTarget","render","scene"],"sources":["C:/Repo/GitHub/rubiks-cube/node_modules/@react-three/drei/core/RenderTexture.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\n\nconst RenderTexture = /* @__PURE__ */React.forwardRef(({\n  children,\n  compute,\n  width,\n  height,\n  samples = 8,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n    if (!parent) return false;\n    // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState());\n    // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false;\n    // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  let oldAutoClear;\n  let oldXrEnabled;\n  let oldRenderTarget;\n  let oldIsPresenting;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      oldAutoClear = state.gl.autoClear;\n      oldXrEnabled = state.gl.xr.enabled;\n      oldRenderTarget = state.gl.getRenderTarget();\n      oldIsPresenting = state.gl.xr.isPresenting;\n      state.gl.autoClear = true;\n      state.gl.xr.enabled = false;\n      state.gl.xr.isPresenting = false;\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(oldRenderTarget);\n      state.gl.autoClear = oldAutoClear;\n      state.gl.xr.enabled = oldXrEnabled;\n      state.gl.xr.isPresenting = oldIsPresenting;\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}