{"ast":null,"code":"import _objectSpread from \"C:/Repo/GitHub/rubiks-cube/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as THREE from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor() {\n      let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      super({\n        uniforms: entries.reduce((acc, _ref) => {\n          let [name, value] = _ref;\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return _objectSpread(_objectSpread({}, acc), uniform);\n        }, {}),\n        vertexShader,\n        fragmentShader\n      });\n      // Create getter/setters\n      this.key = '';\n      entries.forEach(_ref2 => {\n        let [name] = _ref2;\n        return Object.defineProperty(this, name, {\n          get: () => this.uniforms[name].value,\n          set: v => this.uniforms[name].value = v\n        });\n      });\n\n      // Assign parameters, this might include uniforms\n      Object.assign(this, parameters);\n      // Call onInit\n      if (onInit) onInit(this);\n    }\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\nexport { shaderMaterial };","map":{"version":3,"names":["THREE","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","material","ShaderMaterial","constructor","parameters","arguments","length","undefined","entries","Object","reduce","acc","_ref","name","value","uniform","UniformsUtils","clone","_objectSpread","key","forEach","_ref2","defineProperty","get","set","v","assign","MathUtils","generateUUID"],"sources":["C:/Repo/GitHub/rubiks-cube/node_modules/@react-three/drei/core/shaderMaterial.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor(parameters = {}) {\n      const entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return {\n            ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      });\n      // Create getter/setters\n      this.key = '';\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n\n      // Assign parameters, this might include uniforms\n      Object.assign(this, parameters);\n      // Call onInit\n      if (onInit) onInit(this);\n    }\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAcA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,EAAEC,MAAM,EAAE;EACtE,MAAMC,QAAQ,GAAG,MAAMA,QAAQ,SAASN,KAAK,CAACO,cAAc,CAAC;IAC3DC,WAAWA,CAAA,EAAkB;MAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACzB,MAAMG,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACX,QAAQ,CAAC;MACxC;MACA,KAAK,CAAC;QACJA,QAAQ,EAAEW,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,EAAAC,IAAA,KAAoB;UAAA,IAAlB,CAACC,IAAI,EAAEC,KAAK,CAAC,GAAAF,IAAA;UAC1C,MAAMG,OAAO,GAAGpB,KAAK,CAACqB,aAAa,CAACC,KAAK,CAAC;YACxC,CAACJ,IAAI,GAAG;cACNC;YACF;UACF,CAAC,CAAC;UACF,OAAAI,aAAA,CAAAA,aAAA,KACKP,GAAG,GACHI,OAAO;QAEd,CAAC,EAAE,CAAC,CAAC,CAAC;QACNjB,YAAY;QACZC;MACF,CAAC,CAAC;MACF;MACA,IAAI,CAACoB,GAAG,GAAG,EAAE;MACbX,OAAO,CAACY,OAAO,CAACC,KAAA;QAAA,IAAC,CAACR,IAAI,CAAC,GAAAQ,KAAA;QAAA,OAAKZ,MAAM,CAACa,cAAc,CAAC,IAAI,EAAET,IAAI,EAAE;UAC5DU,GAAG,EAAEA,CAAA,KAAM,IAAI,CAAC1B,QAAQ,CAACgB,IAAI,CAAC,CAACC,KAAK;UACpCU,GAAG,EAAEC,CAAC,IAAI,IAAI,CAAC5B,QAAQ,CAACgB,IAAI,CAAC,CAACC,KAAK,GAAGW;QACxC,CAAC,CAAC;MAAA,EAAC;;MAEH;MACAhB,MAAM,CAACiB,MAAM,CAAC,IAAI,EAAEtB,UAAU,CAAC;MAC/B;MACA,IAAIJ,MAAM,EAAEA,MAAM,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EACDC,QAAQ,CAACkB,GAAG,GAAGxB,KAAK,CAACgC,SAAS,CAACC,YAAY,CAAC,CAAC;EAC7C,OAAO3B,QAAQ;AACjB;AAEA,SAASL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}