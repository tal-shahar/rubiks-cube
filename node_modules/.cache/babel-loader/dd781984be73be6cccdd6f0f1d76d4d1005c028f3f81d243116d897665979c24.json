{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\GitHub\\\\rubiks-cube\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport RubiksCube from './components/RubiksCube';\nimport Controls from './components/Controls';\nimport InfoPanel from './components/InfoPanel';\nimport IdentifyIncorrectShapes from './components/IdentifyIncorrectShapes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = AppContainer;\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n`;\n_c4 = Subtitle;\nconst MainContent = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  max-width: 1200px;\n`;\n_c5 = MainContent;\nconst CubeContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n`;\n_c6 = CubeContainer;\nfunction App() {\n  _s();\n  const [isRotating, setIsRotating] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [currentScramble, setCurrentScramble] = useState('');\n  const [cubeState, setCubeState] = useState(null);\n  const [highlightedPieces, setHighlightedPieces] = useState([]);\n  const scrambleRef = useRef();\n  const resetRef = useRef();\n  const solveRef = useRef();\n  const rotateFaceRef = useRef();\n  const handleScramble = () => {\n    if (scrambleRef.current) {\n      setIsScrambling(true);\n      setCurrentScramble('Generating scramble sequence...');\n      scrambleRef.current();\n\n      // Update scramble display after a delay\n      setTimeout(() => {\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\n        setTimeout(() => {\n          setIsScrambling(false);\n        }, 7000);\n      }, 1000);\n    }\n  };\n  const handleReset = () => {\n    if (resetRef.current) {\n      setCurrentScramble('');\n      resetRef.current();\n    }\n  };\n  const handleSolve = () => {\n    if (solveRef.current) {\n      setCurrentScramble('Solving cube...');\n      solveRef.current();\n    }\n  };\n  const handleRotateFace = (face, direction) => {\n    console.log('🎯 handleRotateFace called with:', face, direction);\n    console.log('🎯 rotateFaceRef.current:', rotateFaceRef.current);\n    if (rotateFaceRef.current) {\n      console.log('🎯 Calling rotateFaceRef.current with:', face, direction);\n      try {\n        rotateFaceRef.current(face, direction);\n        console.log('🎯 rotateFaceRef.current call completed successfully');\n      } catch (error) {\n        console.log('🎯 ERROR calling rotateFaceRef.current:', error);\n      }\n    } else {\n      console.log('🎯 ERROR: rotateFaceRef.current is null!');\n    }\n  };\n\n  // Add keyboard event handling\n  useEffect(() => {\n    const handleKeyDown = event => {\n      console.log('🔑 Keyboard event detected:', event.key, event.shiftKey);\n\n      // Prevent default behavior for cube rotation keys\n      const rotationKeys = ['r', 'l', 'u', 'd', 'f', 'b'];\n      if (rotationKeys.includes(event.key.toLowerCase())) {\n        event.preventDefault();\n        console.log('🔑 Prevented default for key:', event.key);\n      }\n\n      // Determine direction based on shift key\n      const direction = event.shiftKey ? 'counterclockwise' : 'clockwise';\n      console.log('🔑 Direction determined:', direction);\n\n      // Handle cube rotation keys\n      switch (event.key.toLowerCase()) {\n        case 'r':\n          console.log('🔑 R key pressed - calling handleRotateFace');\n          handleRotateFace('R', direction);\n          break;\n        case 'l':\n          console.log('🔑 L key pressed - calling handleRotateFace');\n          handleRotateFace('L', direction);\n          break;\n        case 'u':\n          console.log('🔑 U key pressed - calling handleRotateFace');\n          handleRotateFace('U', direction);\n          break;\n        case 'd':\n          console.log('🔑 D key pressed - calling handleRotateFace');\n          handleRotateFace('D', direction);\n          break;\n        case 'f':\n          console.log('🔑 F key pressed - calling handleRotateFace');\n          handleRotateFace('F', direction);\n          break;\n        case 'b':\n          console.log('🔑 B key pressed - calling handleRotateFace');\n          console.log('🔑 B key - direction:', direction);\n          console.log('🔑 B key - rotateFaceRef.current:', !!rotateFaceRef.current);\n          handleRotateFace('B', direction);\n          break;\n        default:\n          console.log('🔑 Key not recognized:', event.key);\n          break;\n      }\n    };\n\n    // Add event listener\n    window.addEventListener('keydown', handleKeyDown);\n    console.log('🔑 Keyboard event listener added');\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      console.log('🔑 Keyboard event listener removed');\n    };\n  }, []);\n  const handleIdentification = identificationResult => {\n    // Clear previous highlights\n    setHighlightedPieces([]);\n\n    // Log identification results to main development terminal\n    console.log('\\n' + '🔍'.repeat(50));\n    console.log(`🎯 IDENTIFICATION RESULT IN MAIN TERMINAL!`);\n    console.log(`📊 Type: ${identificationResult.type}`);\n    if (identificationResult.type === 'piece') {\n      console.log(`🆔 Piece ID: ${identificationResult.pieceId}`);\n      console.log(`🎨 Shape: ${identificationResult.shapeColor} ${identificationResult.shapeType}`);\n      console.log(`📍 Current Position: [${identificationResult.currentPosition.join(', ')}]`);\n      console.log(`🎯 Expected Position: [${identificationResult.expectedPosition.join(', ')}]`);\n      console.log(`✅ Is Correct: ${identificationResult.isInCorrectPosition}`);\n      console.log(`🎭 Expected Border Colors:`, identificationResult.expectedBorderColors);\n      console.log(`📊 Move History: ${identificationResult.rotationHistory.length} moves`);\n    } else if (identificationResult.type === 'combination') {\n      console.log(`🎯 Combination: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border`);\n      console.log(`🔢 Count: ${identificationResult.count} incorrect pieces found`);\n      console.log(`📋 Incorrect Pieces:`, identificationResult.incorrectPieces);\n    } else if (identificationResult.type === 'blackFaces') {\n      console.log(`⚫ BLACK FACES IDENTIFIED: ${identificationResult.count} pieces with visible black faces found`);\n      console.log(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink`);\n      console.log(`📋 Pieces with Black Visible Faces (highlighted in pink):`, identificationResult.incorrectPieces.map(p => ({\n        pieceId: p.pieceId,\n        shape: `${p.shapeColor} ${p.shapeType}`,\n        position: `[${p.currentPosition.join(', ')}]`,\n        blackVisibleFaces: p.blackVisibleFaces,\n        blackFaceCount: p.blackVisibleFaces.length,\n        visibleFaces: p.visibleFaces,\n        allColors: p.colors\n      })));\n\n      // Set highlighted pieces for visual feedback\n      setHighlightedPieces(identificationResult.incorrectPieces);\n    } else {\n      console.log(`🔢 Count: ${identificationResult.count} incorrect pieces found`);\n      if (identificationResult.type === 'shape') {\n        console.log(`🔷 Shape Type: ${identificationResult.shapeType}`);\n      } else if (identificationResult.type === 'color') {\n        console.log(`🎨 Shape Color: ${identificationResult.shapeColor}`);\n      } else if (identificationResult.type === 'border') {\n        console.log(`🎭 Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.log(`🎯 Face Index: ${identificationResult.faceIndex}`);\n      }\n      console.log(`📋 Incorrect Pieces:`, identificationResult.incorrectPieces);\n    }\n    console.log('🔍'.repeat(50) + '\\n');\n\n    // Force output to the React development server terminal\n    if (identificationResult.type === 'piece') {\n      console.error(`\\n🔍 PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})`);\n      console.error(`📍 Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]`);\n      console.error(`✅ Correct: ${identificationResult.isInCorrectPosition}`);\n    } else if (identificationResult.type === 'combination') {\n      console.error(`\\n🔍 COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border - ${identificationResult.count} incorrect pieces`);\n      console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', '));\n    } else if (identificationResult.type === 'blackFaces') {\n      console.error(`\\n⚫ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with visible black faces found`);\n      console.error(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink`);\n      console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}] - Black visible faces: [${p.blackVisibleFaces.join(', ')}] (${p.blackVisibleFaces.length} faces) (highlighted in pink)`).join(', '));\n    } else {\n      if (identificationResult.type === 'border') {\n        console.error(`\\n🔍 BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`🎭 Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', '));\n      } else {\n        console.error(`\\n🔍 IDENTIFICATION: ${identificationResult.type.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        const details = identificationResult.incorrectPieces.map(p => `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`).join(', ');\n        console.error(`📋 Details:`, details);\n      }\n    }\n\n    // Try to write directly to stdout\n    if (typeof process !== 'undefined' && process.stdout) {\n      if (identificationResult.type === 'piece') {\n        process.stdout.write(`\\n🔍 PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})\\n`);\n        process.stdout.write(`Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]\\n`);\n        process.stdout.write(`Correct: ${identificationResult.isInCorrectPosition}\\n\\n`);\n      } else if (identificationResult.type === 'combination') {\n        process.stdout.write(`\\n🔍 COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border\\n`);\n        process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n      } else if (identificationResult.type === 'blackFaces') {\n        process.stdout.write(`\\n⚫ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with visible black faces found\\n`);\n        process.stdout.write(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified (highlighted in pink)\\n\\n`);\n      } else {\n        if (identificationResult.type === 'border') {\n          process.stdout.write(`\\n🔍 BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})\\n\\n`);\n        } else {\n          process.stdout.write(`\\n🔍 IDENTIFICATION RESULT: ${identificationResult.type.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Rubik's Cube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Interactive 3D Cube with Three.js & React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(CubeContainer, {\n        children: /*#__PURE__*/_jsxDEV(RubiksCube, {\n          isRotating: isRotating,\n          autoRotate: autoRotate,\n          onScramble: scrambleFn => {\n            scrambleRef.current = scrambleFn;\n          },\n          onReset: resetFn => {\n            resetRef.current = resetFn;\n          },\n          onSolve: solveFn => {\n            solveRef.current = solveFn;\n          },\n          onRotateFace: rotateFaceFn => {\n            rotateFaceRef.current = rotateFaceFn;\n          },\n          onCubeStateChange: setCubeState,\n          highlightedPieces: highlightedPieces\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        isRotating: isRotating,\n        setIsRotating: setIsRotating,\n        autoRotate: autoRotate,\n        setAutoRotate: setAutoRotate,\n        onScramble: handleScramble,\n        onReset: handleReset,\n        onSolve: handleSolve,\n        onRotateFace: handleRotateFace,\n        cubeState: cubeState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {\n        currentScramble: currentScramble,\n        isScrambling: isScrambling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IdentifyIncorrectShapes, {\n        isScrambling: isScrambling,\n        cubeState: cubeState,\n        onIdentification: handleIdentification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1E2N/XtpcguN8omYJjDTTBYSo+Y=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"MainContent\");\n$RefreshReg$(_c6, \"CubeContainer\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","RubiksCube","Controls","InfoPanel","IdentifyIncorrectShapes","jsxDEV","_jsxDEV","AppContainer","div","_c","Header","header","_c2","Title","h1","_c3","Subtitle","p","_c4","MainContent","main","_c5","CubeContainer","_c6","App","_s","isRotating","setIsRotating","autoRotate","setAutoRotate","isScrambling","setIsScrambling","currentScramble","setCurrentScramble","cubeState","setCubeState","highlightedPieces","setHighlightedPieces","scrambleRef","resetRef","solveRef","rotateFaceRef","handleScramble","current","setTimeout","handleReset","handleSolve","handleRotateFace","face","direction","console","log","error","handleKeyDown","event","key","shiftKey","rotationKeys","includes","toLowerCase","preventDefault","window","addEventListener","removeEventListener","handleIdentification","identificationResult","repeat","type","pieceId","shapeColor","shapeType","currentPosition","join","expectedPosition","isInCorrectPosition","expectedBorderColors","rotationHistory","length","combination","borderColor","count","incorrectPieces","totalBlackFaces","map","shape","position","blackVisibleFaces","blackFaceCount","visibleFaces","allColors","colors","borderColorName","borderColorHex","faceIndex","toUpperCase","details","process","stdout","write","children","fileName","_jsxFileName","lineNumber","columnNumber","onScramble","scrambleFn","onReset","resetFn","onSolve","solveFn","onRotateFace","rotateFaceFn","onCubeStateChange","onIdentification","_c7","$RefreshReg$"],"sources":["C:/Repo/GitHub/rubiks-cube/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport RubiksCube from './components/RubiksCube';\nimport Controls from './components/Controls';\nimport InfoPanel from './components/InfoPanel';\nimport IdentifyIncorrectShapes from './components/IdentifyIncorrectShapes';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  text-align: center;\n  margin-bottom: 30px;\n  color: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n`;\n\nconst MainContent = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst CubeContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n`;\n\nfunction App() {\n  const [isRotating, setIsRotating] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [currentScramble, setCurrentScramble] = useState('');\n  const [cubeState, setCubeState] = useState(null);\n  const [highlightedPieces, setHighlightedPieces] = useState([]);\n  const scrambleRef = useRef();\n  const resetRef = useRef();\n  const solveRef = useRef();\n  const rotateFaceRef = useRef();\n\n  const handleScramble = () => {\n    if (scrambleRef.current) {\n      setIsScrambling(true);\n      setCurrentScramble('Generating scramble sequence...');\n      scrambleRef.current();\n      \n      // Update scramble display after a delay\n      setTimeout(() => {\n        setCurrentScramble('F B R L U D F\\' B\\' R\\' L\\' U\\' D\\' F2 B2 R2 L2 U2 D2');\n        setTimeout(() => {\n          setIsScrambling(false);\n        }, 7000);\n      }, 1000);\n    }\n  };\n\n  const handleReset = () => {\n    if (resetRef.current) {\n      setCurrentScramble('');\n      resetRef.current();\n    }\n  };\n\n  const handleSolve = () => {\n    if (solveRef.current) {\n      setCurrentScramble('Solving cube...');\n      solveRef.current();\n    }\n  };\n\n  const handleRotateFace = (face, direction) => {\n    console.log('🎯 handleRotateFace called with:', face, direction);\n    console.log('🎯 rotateFaceRef.current:', rotateFaceRef.current);\n    if (rotateFaceRef.current) {\n      console.log('🎯 Calling rotateFaceRef.current with:', face, direction);\n      try {\n        rotateFaceRef.current(face, direction);\n        console.log('🎯 rotateFaceRef.current call completed successfully');\n      } catch (error) {\n        console.log('🎯 ERROR calling rotateFaceRef.current:', error);\n      }\n    } else {\n      console.log('🎯 ERROR: rotateFaceRef.current is null!');\n    }\n  };\n\n  // Add keyboard event handling\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      console.log('🔑 Keyboard event detected:', event.key, event.shiftKey);\n      \n      // Prevent default behavior for cube rotation keys\n      const rotationKeys = ['r', 'l', 'u', 'd', 'f', 'b'];\n      if (rotationKeys.includes(event.key.toLowerCase())) {\n        event.preventDefault();\n        console.log('🔑 Prevented default for key:', event.key);\n      }\n\n      // Determine direction based on shift key\n      const direction = event.shiftKey ? 'counterclockwise' : 'clockwise';\n      console.log('🔑 Direction determined:', direction);\n\n      // Handle cube rotation keys\n      switch (event.key.toLowerCase()) {\n        case 'r':\n          console.log('🔑 R key pressed - calling handleRotateFace');\n          handleRotateFace('R', direction);\n          break;\n        case 'l':\n          console.log('🔑 L key pressed - calling handleRotateFace');\n          handleRotateFace('L', direction);\n          break;\n        case 'u':\n          console.log('🔑 U key pressed - calling handleRotateFace');\n          handleRotateFace('U', direction);\n          break;\n        case 'd':\n          console.log('🔑 D key pressed - calling handleRotateFace');\n          handleRotateFace('D', direction);\n          break;\n        case 'f':\n          console.log('🔑 F key pressed - calling handleRotateFace');\n          handleRotateFace('F', direction);\n          break;\n        case 'b':\n          console.log('🔑 B key pressed - calling handleRotateFace');\n          console.log('🔑 B key - direction:', direction);\n          console.log('🔑 B key - rotateFaceRef.current:', !!rotateFaceRef.current);\n          handleRotateFace('B', direction);\n          break;\n        default:\n          console.log('🔑 Key not recognized:', event.key);\n          break;\n      }\n    };\n\n    // Add event listener\n    window.addEventListener('keydown', handleKeyDown);\n    console.log('🔑 Keyboard event listener added');\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      console.log('🔑 Keyboard event listener removed');\n    };\n  }, []);\n\n\n  const handleIdentification = (identificationResult) => {\n    // Clear previous highlights\n    setHighlightedPieces([]);\n    \n    // Log identification results to main development terminal\n    console.log('\\n' + '🔍'.repeat(50));\n    console.log(`🎯 IDENTIFICATION RESULT IN MAIN TERMINAL!`);\n    console.log(`📊 Type: ${identificationResult.type}`);\n    \n    if (identificationResult.type === 'piece') {\n      console.log(`🆔 Piece ID: ${identificationResult.pieceId}`);\n      console.log(`🎨 Shape: ${identificationResult.shapeColor} ${identificationResult.shapeType}`);\n      console.log(`📍 Current Position: [${identificationResult.currentPosition.join(', ')}]`);\n      console.log(`🎯 Expected Position: [${identificationResult.expectedPosition.join(', ')}]`);\n      console.log(`✅ Is Correct: ${identificationResult.isInCorrectPosition}`);\n      console.log(`🎭 Expected Border Colors:`, identificationResult.expectedBorderColors);\n      console.log(`📊 Move History: ${identificationResult.rotationHistory.length} moves`);\n    } else if (identificationResult.type === 'combination') {\n      console.log(`🎯 Combination: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border`);\n      console.log(`🔢 Count: ${identificationResult.count} incorrect pieces found`);\n      console.log(`📋 Incorrect Pieces:`, identificationResult.incorrectPieces);\n    } else if (identificationResult.type === 'blackFaces') {\n      console.log(`⚫ BLACK FACES IDENTIFIED: ${identificationResult.count} pieces with visible black faces found`);\n      console.log(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink`);\n      console.log(`📋 Pieces with Black Visible Faces (highlighted in pink):`, identificationResult.incorrectPieces.map(p => ({\n        pieceId: p.pieceId,\n        shape: `${p.shapeColor} ${p.shapeType}`,\n        position: `[${p.currentPosition.join(', ')}]`,\n        blackVisibleFaces: p.blackVisibleFaces,\n        blackFaceCount: p.blackVisibleFaces.length,\n        visibleFaces: p.visibleFaces,\n        allColors: p.colors\n      })));\n      \n      // Set highlighted pieces for visual feedback\n      setHighlightedPieces(identificationResult.incorrectPieces);\n    } else {\n      console.log(`🔢 Count: ${identificationResult.count} incorrect pieces found`);\n      \n      if (identificationResult.type === 'shape') {\n        console.log(`🔷 Shape Type: ${identificationResult.shapeType}`);\n      } else if (identificationResult.type === 'color') {\n        console.log(`🎨 Shape Color: ${identificationResult.shapeColor}`);\n      } else if (identificationResult.type === 'border') {\n        console.log(`🎭 Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.log(`🎯 Face Index: ${identificationResult.faceIndex}`);\n      }\n      \n      console.log(`📋 Incorrect Pieces:`, identificationResult.incorrectPieces);\n    }\n    \n    console.log('🔍'.repeat(50) + '\\n');\n    \n    // Force output to the React development server terminal\n    if (identificationResult.type === 'piece') {\n      console.error(`\\n🔍 PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})`);\n      console.error(`📍 Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]`);\n      console.error(`✅ Correct: ${identificationResult.isInCorrectPosition}`);\n    } else if (identificationResult.type === 'combination') {\n      console.error(`\\n🔍 COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border - ${identificationResult.count} incorrect pieces`);\n      console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => \n        `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n      ).join(', '));\n    } else if (identificationResult.type === 'blackFaces') {\n      console.error(`\\n⚫ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with visible black faces found`);\n      console.error(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink`);\n      console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => \n        `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}] - Black visible faces: [${p.blackVisibleFaces.join(', ')}] (${p.blackVisibleFaces.length} faces) (highlighted in pink)`\n      ).join(', '));\n    } else {\n      if (identificationResult.type === 'border') {\n        console.error(`\\n🔍 BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        console.error(`🎭 Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})`);\n        console.error(`📋 Details:`, identificationResult.incorrectPieces.map(p => \n          `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n        ).join(', '));\n      } else {\n        console.error(`\\n🔍 IDENTIFICATION: ${identificationResult.type.toUpperCase()} - ${identificationResult.count} incorrect pieces`);\n        const details = identificationResult.incorrectPieces.map(p => \n          `${p.shapeColor} ${p.shapeType} (Piece ${p.pieceId}) at [${p.currentPosition.join(', ')}]`\n        ).join(', ');\n        console.error(`📋 Details:`, details);\n      }\n    }\n    \n    // Try to write directly to stdout\n    if (typeof process !== 'undefined' && process.stdout) {\n      if (identificationResult.type === 'piece') {\n        process.stdout.write(`\\n🔍 PIECE IDENTIFICATION: ${identificationResult.shapeColor} ${identificationResult.shapeType} (Piece ${identificationResult.pieceId})\\n`);\n        process.stdout.write(`Position: [${identificationResult.currentPosition.join(', ')}] -> [${identificationResult.expectedPosition.join(', ')}]\\n`);\n        process.stdout.write(`Correct: ${identificationResult.isInCorrectPosition}\\n\\n`);\n      } else if (identificationResult.type === 'combination') {\n        process.stdout.write(`\\n🔍 COMBINATION IDENTIFICATION: ${identificationResult.combination.shapeColor} ${identificationResult.combination.shapeType} with ${identificationResult.combination.borderColor} border\\n`);\n        process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n      } else if (identificationResult.type === 'blackFaces') {\n        process.stdout.write(`\\n⚫ BLACK FACES IDENTIFICATION: ${identificationResult.count} pieces with visible black faces found\\n`);\n        process.stdout.write(`🔢 TOTAL BLACK FACES: ${identificationResult.totalBlackFaces} individual faces painted pink\\n`);\n        process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified (highlighted in pink)\\n\\n`);\n      } else {\n        if (identificationResult.type === 'border') {\n          process.stdout.write(`\\n🔍 BORDER IDENTIFICATION: ${identificationResult.borderColorName.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Border Color: ${identificationResult.borderColorName} (${identificationResult.borderColorHex})\\n\\n`);\n        } else {\n          process.stdout.write(`\\n🔍 IDENTIFICATION RESULT: ${identificationResult.type.toUpperCase()}\\n`);\n          process.stdout.write(`Count: ${identificationResult.count} incorrect pieces\\n`);\n          process.stdout.write(`Details: ${identificationResult.incorrectPieces.length} pieces identified\\n\\n`);\n        }\n      }\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Header>\n        <Title>Rubik's Cube</Title>\n        <Subtitle>Interactive 3D Cube with Three.js & React</Subtitle>\n      </Header>\n      \n      <MainContent>\n        <CubeContainer>\n          <RubiksCube \n            isRotating={isRotating}\n            autoRotate={autoRotate}\n            onScramble={(scrambleFn) => { scrambleRef.current = scrambleFn; }}\n            onReset={(resetFn) => { resetRef.current = resetFn; }}\n            onSolve={(solveFn) => { solveRef.current = solveFn; }}\n            onRotateFace={(rotateFaceFn) => { rotateFaceRef.current = rotateFaceFn; }}\n            onCubeStateChange={setCubeState}\n            highlightedPieces={highlightedPieces}\n          />\n        </CubeContainer>\n        \n        <Controls \n          isRotating={isRotating}\n          setIsRotating={setIsRotating}\n          autoRotate={autoRotate}\n          setAutoRotate={setAutoRotate}\n          onScramble={handleScramble}\n          onReset={handleReset}\n          onSolve={handleSolve}\n          onRotateFace={handleRotateFace}\n          cubeState={cubeState}\n        />\n        \n        <InfoPanel \n          currentScramble={currentScramble}\n          isScrambling={isScrambling}\n        />\n        \n        <IdentifyIncorrectShapes\n          isScrambling={isScrambling}\n          cubeState={cubeState}\n          onIdentification={handleIdentification}\n        />\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}